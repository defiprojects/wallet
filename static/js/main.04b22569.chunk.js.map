{"version":3,"sources":["components/primitive/index.ts","components/primitive/card/card.component.tsx","themes/styled-components.ts","components/primitive/box/box.component.tsx","components/primitive/button/button.component.props.ts","components/primitive/image/image.component.tsx","utils/variables.ts","utils/spacing.ts","components/primitive/icon-svg/icon-svg.component.props.ts","components/primitive/button/button.component.styles.ts","components/primitive/button/button.component.tsx","components/primitive/drop-down/drop-down.component.styles.ts","themes/colors.ts","themes/images.ts","utils/GlobalReset.ts","utils/typography.ts","components/primitive/icon-svg/icon-svg.component.style.ts","components/primitive/icon-svg/icon-svg.component.tsx","themes/palette.ts","components/primitive/access-safe/access-safe.component.tsx","navigation/route-path.ts","components/primitive/navlink/navlink.component.tsx","components/primitive/tooltip/tooltip.component.tsx","components/primitive/side-panel/side-panel.component.tsx","components/primitive/spinner/spinner.component.tsx","components/primitive/alerts/alert.component.props.ts","components/primitive/alerts/alert.component.styles.ts","components/primitive/alerts/alert.component.tsx","components/primitive/alerts/alert.component.utils.ts","components/primitive/avatar/avatar.component.props.ts","components/primitive/avatar/avatar.component.styles.ts","components/primitive/avatar/avatar.component.tsx","components/primitive/badge/badge.component.props.ts","components/primitive/badge/badge.component.styles.ts","components/primitive/avatar-group/avatar-group.component.styles.ts","components/primitive/top-bar/top-bar.component.styles.ts","components/primitive/top-bar/top-bar.component.tsx","components/primitive/text-area/text-area.component.styles.ts","components/primitive/input/input.component.styles.ts","components/primitive/input/input.component.tsx","components/primitive/notice-loader/notice-loader.component.styles.ts","components/primitive/notice-loader/notice-loader.component.tsx","components/primitive/create-card/create-card.component.styles.ts","components/primitive/stats-card/stats-card.component.styles.ts","components/primitive/stats-card/stats-card.component.tsx","components/primitive/toggle-switch/toggle-switch.component.styles.ts","components/primitive/toggle-switch/toggle-switch.component.tsx","components/primitive/generic-modal/generic-modal.component.style.ts","components/primitive/generic-modal/generic-modal.component.tsx","assets/icons/arrow_down.svg","assets/icons/arrow_left.svg","assets/icons/arrow_right.svg","assets/icons/hamburger_menu.svg","assets/icons/add.svg","assets/icons/arrow_up.svg","assets/icons/bitcoin.svg","assets/icons/calender.svg","assets/icons/check.svg","assets/icons/check_active.svg","assets/icons/claims.svg","assets/icons/close.svg","assets/icons/copy.svg","assets/icons/darkMode.svg","assets/icons/dashboard.svg","assets/icons/dayMode.svg","assets/icons/discord.svg","assets/icons/discord-full.svg","assets/icons/edit.svg","assets/icons/external_link.svg","assets/icons/feedback.svg","assets/icons/github.svg","assets/icons/google.svg","assets/icons/guarding.svg","assets/icons/heart.svg","assets/icons/info.svg","assets/icons/info_active.svg","assets/icons/inherit.svg","assets/icons/lock.svg","assets/icons/locked.svg","assets/icons/pending.svg","assets/icons/metamask.svg","assets/icons/money.svg","assets/icons/notification.svg","assets/images/demo.png","assets/icons/profile.svg","assets/icons/safes.svg","assets/icons/twitter.svg","assets/icons/upload.svg","assets/icons/user.svg","assets/icons/avatar.svg","assets/icons/error.svg","assets/icons/checkSuccess.svg","assets/icons/active.svg","assets/icons/shield.svg","assets/icons/checked.svg","assets/icons/success-alert.svg","assets/icons/warning-alert.svg","assets/icons/info-alert.svg","assets/icons/error-alert.svg","assets/logo/safient_avatar.png","assets/icons/login-google.svg","assets/icons/login-github.svg","assets/icons/login-metamask.svg","assets/icons/lockLoader.gif","assets/logo/logo.svg","assets/icons/safientWallet.svg","assets/images/landing-page.svg","components/primitive/text/text.component.props.ts","components/primitive/text/text.component.styles.ts","i18n/translate.ts","components/primitive/text/text.component.tsx","components/app-layout/app-layout.component.styles.ts","components/app-layout/index.tsx","screens/home/components/wallet-card/wallet-card.component.props.ts","screens/home/components/wallet-card/wallet-card.component.styles.ts","screens/home/components/wallet-card/wallet-card.component.utils.ts","store/stores/index.ts","screens/home/components/wallet-card/wallet-card-shimmer.component.tsx","screens/home/components/wallet-card/wallet-card.component.tsx","screens/home/home.screen.styles.ts","store/store/store.impl.ts","store/account/account.store.impl.ts","store/safe/safe.store.impl.ts","store/app/app.store.impl.ts","utils/networks.ts","store/stores/stores.context.tsx","components/common/auth-header.component.styles.ts","components/common/auth-header.component.tsx","services/core/service-response.ts","services/core/service.ts","services/account/account.service.impl.ts","services/ethereum/ethereum.service.impl.ts","services/safe/safe.service.impl.ts","services/storage/storage.service.impl.ts","services/storage/storage.service.ts","utils/Wallet.ts","services/wallet/wallet.service.impl.ts","services/core/services.ts","screens/auth/login/login.screen.styles.ts","screens/auth/login/login.screen.tsx","screens/auth/register/register.screen.styles.ts","screens/auth/register/register.screen.tsx","screens/account/account.screen.styles.ts","screens/create-wallet/create-wallet.screen.styles.ts","navigation/route-name.ts","screens/create-wallet/create-wallet.screen.tsx","screens/landing-page/landing-page.screen.styles.ts","navigation/routes.ts","screens/home/home.screen.tsx","screens/account/account.screen.tsx","screens/not-found/not-found.screen.tsx","screens/landing-page/landing-page.screen.tsx","screens/wallet-overview/wallet-overview.screen.tsx","screens/wallet-claim/wallet-claim.screen.tsx","screens/wallet-settings/wallet-settings.screen.tsx","navigation/navigation.tsx","themes/light/index.ts","App.tsx","index.tsx"],"names":["CardBase","styled","Box","attrs","padding","theme","colors","white","shadow","Card","props","styledComponents","useTheme","row","borderRadius","spaceBetween","flex","hidden","bottom","children","color","height","width","maxHeight","maxWidth","hCenter","vCenter","marginTop","marginBottom","marginLeft","marginRight","marginHorizontal","marginVertical","margin","paddingTop","paddingBottom","paddingLeft","paddingRight","paddingHorizontal","paddingVertical","gap","wrap","rightAlign","centerAlign","loading","styleOverride","style","rest","paddingTopValue","paddingBottomValue","paddingLeftValue","paddingRightValue","marginTopValue","marginBottomValue","marginLeftValue","marginRightValue","_maxWidth","_bottomAlign","alignItems","justifyContent","_rightAlign","display","flexDirection","minHeight","_","isNil","backgroundColor","flexWrap","isNumber","spacing","Layout","Row","Col","Variant","StyledImage","img","rounded","Image","withTheme","src","alt","name","images","url","BreakPoints","tiny","small","medium","large","Size","BaseButton","PrimaryButton","primary","GhostButton","borderLightest","SmallButton","spin","keyframes","Spinner","div","spinnerBorder","IconWrapper","span","ButtonText","Text","Button","variant","label","icon","onClick","StyledButton","ButtonComponent","ghost","getVariant","StyledButtonComponent","wide","textLight","fieldset","palette","black","royalBlue","primaryGradient","blueIndigoGradient","textDark","grey","greyLight","textLighter","greyLighter","success","green","successLight","greenLight","successLighter","greenTransparent","successLightest","greenLighter","error","red","errorLight","redLight","errorLighter","redTransparent","errorLightest","redLighter","infoLight","blueLight","infoLightest","blueLighter","link","royalBlueLight","warning","yellow","warningLight","yellowLight","warningLightest","yellowLighter","modalBackdrop","grayTransparent","border","borderLight","borderLighter","greyLightest","navLinkActive","royalBlueTransparent","applicationBackground","whiteLiac","bottomAccent","offWhite","toggleSwitchBackground","royalBlueLighter","lightGray","shimmer","silverLight","arrowDown","require","default","arrowLeft","arrowRight","hamburgerMenu","add","arrowUp","bitcoin","calender","check","checkActive","claim","close","copy","darkMode","dashboard","dayMode","discord","discordFull","edit","externalLink","feedback","github","google","guarding","heart","info","infoActive","inherit","lock","locked","pending","metaMask","money","notification","placeHolderAvatar","profile","safes","twitter","upload","user","avatar","checkSuccess","active","shield","checked","successAlert","warningAlert","infoAlert","errorAlert","safientAvatar","loginWithGoogle","loginWithGitHub","loginWithMetaMask","lockLoader","safientWalletLogo","safientWallet","landingPage","GlobalStyle","createGlobalStyle","normalize","SvgWrapper","IconSvg","size","beforeInjection","svg","setAttribute","aquaBlue","aquaBlueLight","aquaBlueLighter","greenLightest","greenDark","yellowLightest","redLightest","RoutePath","Link","Tooltip","text","SpinnerContainer","TextColors","IconName","Base","SuccessAlert","ErrorAlert","WarningAlert","InfoAlert","AlertText","Alert","baseAlert","alertComponent","textColor","iconName","undefined","AlertComponent","AvatarSize","Small","flat","Medium","Large","Avatar","StyledAvatarComponent","getAvatarVariant","AvatarComponent","BaseBadge","TopBarContainer","LogoWrapper","NotificationIcon","BoxGroup","TopBar","align","justify","to","home","textarea","InputContainer","StyledInput","input","InputWrapper","Icon","InputLabel","ErrorMessageContainer","Input","value","type","isDisabled","errorMsg","NoticeLoaderContainer","LoaderText","HelperText","NoticeLoader","spinner","helperText","show","hide","noClose","StatsContainer","CountContainer","StatsCard","heading","count","ToggleSwitchContainer","Switch","ToggleSwitch","toggleID","onChange","id","className","htmlFor","FadingBackground","BaseModalBackground","ModalButton","StyledModal","Modal","CloseModal","h1","GenericModal","onClose","title","onSubmit","onCancel","useState","isOpen","setIsOpen","opacity","setOpacity","toggleModal","e","handleClose","backgroundComponent","afterOpen","setTimeout","beforeClose","Promise","resolve","onBackgroundClick","onEscapeKeydown","backgroundProps","bold","FontSize","FontWeight","TextAlign","h2","Title","ContentHeader","Content","p","semiBold","i18n","translations","_translate","memoize","key","config","t","JSON","stringify","tx","txOptions","content","StyledText","TextComponent","contentHeader","Typography","upperCase","lowerCase","capitalize","center","left","right","lineHeight","noBold","bold500","bold600","AppContainer","ContentWrapper","AppLayout","WalletStatus","UserRole","Color","StyledWalletCard","WalletText","MetaInfo","StoreType","getStatusInfo","status","getUserInfo","creator","beneficiary","guardian","placeholderShimmer","BaseStyle","Line","Circle","WalletCardShimmer","WalletCard","walletName","roleName","createWallet","HomeScreenContainer","SafeText","CardsContainer","SafeCard","StoreImpl","_fetching","_error","_code","this","makeObservable","observable","fetching","computed","errorCode","setFetching","action","setError","flag","message","code","AccountStoreImpl","web3Provider","signer","chainId","address","balance","safient","_web3User","loadAccount","userExists","userSignedIn","resetStore","setWeb3User","a","web3Modal","Web3Modal","cacheProvider","connect","injectedProvider","Web3Provider","getNetwork","network","getSigner","getAddress","getBalance","formatEther","SafientCore","Enums","NetworkType","testnet","DatabaseType","threadDB","SafeStoreImpl","_safe","_walletSecret","_walletInfo","setWallet","safe","secret","AppStoreImpl","USE_FIXTURES","resetStoreWithFixtures","Network","stores","accountStore","appStore","safeStore","StoresContext","React","createContext","useStores","useContext","NavContainer","Header","window","location","href","ServiceResponse","data","hasData","get","Service","AccountServiceImpl","loginUser","web3User","email","createUser","EthereumServiceImpl","listen","ethereum","on","SafeServiceImpl","onchain","safeData","seedPhrase","privateKey","keyStore","createSafe","did","safeId","getSafe","file","createClaim","disputeId","createSignal","txReceipt","recoverSafeByBeneficiary","recoveredData","StorageServiceImpl","localStorage","getItem","parse","setItem","removeItem","INFURA_API_KEY","ETHERSCAN_API_KEY","StorageKey","networks","localhost","blockExplorer","api","mainnet","kovan","polygontestnet","polygon","NetworkUtil","Object","values","find","Wallet","walletProvider","getNetworkById","mnemonic","generateMnemonic","_loadAccount","account","_loadProvider","wallet","walletSecret","mnemonicToSeed","seed","hdwallet","hdkey","fromMasterSeed","wallet_hdpath","derivePath","getWallet","getPrivateKey","toString","privateToAddress","Error","signableAccount","EthersWallet","provider","providers","JsonRpcProvider","getChainId","apiURL","fetch","then","res","json","transactionsResp","latestTransactions","result","walletInfo","utils","parseEther","sendTransaction","txResponse","console","log","WalletServiceImpl","create","load","services","safeService","storageService","accountService","ethereumService","walletService","ServicesContext","useServices","LoginContainer","section","LoginFormContainer","FormContainer","LoginText","SocialLoginContainer","SocialIconsContainer","SocialIcon","TextContainer","LoginScreen","history","useHistory","signingIn","setSigningIn","login","push","getErrorMessage","getErrorCode","register","placeholder","RegistrationContainer","RegistrationFormContainer","RegistrationFormBox","RegistrationText","StyledCheckbox","TermsContainer","LinkText","RegisterScreen","observer","fullName","setFullName","setEmail","target","AccountContainer","AccountInfoContainer","AccountInfo","ProfileContainer","Profile","ProfileInfo","StatsCardContainer","AccountSettingsContainer","StyledDiv","SwitchContainer","DefaultSettingsContainer","RouteName","WalletCreateFormContainer","WalletCreateFormBox","WalletCreateText","CreateWalletScreen","setWalletName","setWalletDescription","walletBeneficiary","setWalletBeneficiary","walletOverview","WelcomeContainer","routes","path","exact","private","component","map","length","notFound","welcome","walletClaim","walletSettings","Navigation","isSignedIn","isNewUser","index","Component","isPrivate","routeProps","render","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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B,sC,iCCAzC,OAAe,cAA0B,mC,iCCAzC,OAAe,cAA0B,0C,iCCAzC,OAAe,cAA0B,oC,iCCAzC,OAAe,cAA0B,mC,iCCAzC,OAAe,cAA0B,kC,iCCAzC,OAAe,cAA0B,sC,iCCAzC,OAAe,cAA0B,uC,iCCAzC,OAAe,cAA0B,qC,iCCAzC,OAAe,cAA0B,qC,iCCAzC,OAAe,cAA0B,0C,iCCAzC,OAAe,cAA0B,kC,iCCAzC,OAAe,cAA0B,2C,iCCAzC,OAAe,cAA0B,sC,iCCAzC,OAAe,cAA0B,oC,iCCAzC,OAAe,cAA0B,oC,iCCAzC,OAAe,cAA0B,sC,iCCAzC,OAAe,cAA0B,mC,iCCAzC,OAAe,cAA0B,kC,iCCAzC,OAAe,cAA0B,yC,iCCAzC,OAAe,cAA0B,qC,iCCAzC,OAAe,cAA0B,kC,iCCAzC,OAAe,cAA0B,oC,iCCAzC,OAAe,cAA0B,qC,iCCAzC,OAAe,cAA0B,sC,iCCAzC,OAAe,cAA0B,mC,iCCAzC,OAAe,cAA0B,0C,iCCAzC,OAAe,cAA0B,kC,iCCAzC,OAAe,cAA0B,qC,iCCAzC,OAAe,cAA0B,mC,iCCAzC,OAAe,cAA0B,qC,iCCAzC,OAAe,cAA0B,oC,iCCAzC,OAAe,cAA0B,kC,iCCAzC,OAAe,cAA0B,oC,iCCAzC,OAAe,cAA0B,mC,iCCAzC,OAAe,cAA0B,0C,iCCAzC,OAAe,cAA0B,oC,iCCAzC,OAAe,cAA0B,oC,iCCAzC,OAAe,cAA0B,qC,iCCAzC,OAAe,cAA0B,2C,iCCAzC,OAAe,cAA0B,2C,iCCAzC,OAAe,cAA0B,wC,iCCAzC,OAAe,cAA0B,yC,iCCAzC,OAAe,cAA0B,4C,iCCAzC,OAAe,cAA0B,0C,iCCAzC,OAAe,cAA0B,0C,iCCAzC,OAAe,cAA0B,4C,iCCAzC,OAAe,cAA0B,wC,iCCAzC,OAAe,cAA0B,kC,iCCAzC,OAAe,cAA0B,2C,iCCAzC,OAAe,cAA0B,0C,ijDCG7B5Q,EAyBAuR,EAUAC,EAQAC,E,yDA3CAzR,K,cAAAA,E,8BAAAA,E,kBAAAA,E,eAAAA,M,cAyBAuR,O,iBAAAA,I,mBAAAA,I,mBAAAA,I,oBAAAA,M,cAUAC,O,yBAAAA,I,kBAAA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","file":"static/js/main.04b22569.chunk.js","sourcesContent":["export * from './access-safe/access-safe.component';\nexport * from './access-safe/access-safe.component.props';\n\nexport * from './box/box.component';\nexport * from './box/box.component.props';\n\nexport * from './button/button.component';\nexport * from './button/button.component.props';\n\nexport * from './card/card.component';\nexport * from './card/card.component.props';\n\nexport * from './icon-svg/icon-svg.component';\nexport * from './icon-svg/icon-svg.component.props';\n\nexport * from './image/image.component';\n\nexport * from './avatar/avatar.component';\nexport * from './avatar-group/avatar-group.component';\n\nexport * from './navlink/navlink.component';\nexport * from './navlink/navlink.component.props';\n\nexport * from './top-bar/top-bar.component';\nexport * from './drop-down/drop-down.component';\n\nexport * from './text/text.component';\nexport * from './text-area/text-area.component';\n\nexport * from './drop-down/drop-down.component';\n\nexport * from './input/input.component';\n\nexport * from './notice-loader/notice-loader.component';\n\nexport * from './create-card/create-card.component';\nexport * from './alerts/alert.component';\n\nexport * from './stats-card/stats-card.component';\n\nexport * from './toggle-switch/toggle-switch.component';\n\nexport * from './generic-modal/generic-modal.component';\n\nexport * from './badge/badge.component';\n\nexport * from './tooltip/tooltip.component';\n\nexport * from 'react-grid-system';\n\nexport * from './side-panel/side-panel.component';\nexport * from './side-panel/side-panel.component.props';\n\nexport * from './spinner/spinner.component';\n","import React from 'react';\nimport styled from 'styled-components';\nimport { CardComponentProps } from './card.component.props';\nimport { Box } from '../box/box.component';\nimport { BoxComponentProps } from '../box/box.component.props';\n\nconst CardBase = styled(Box).attrs({\n  padding: 'tiny',\n})<BoxComponentProps>`\n  background-color: ${({\n    theme: {\n      colors: { white },\n    },\n  }) => white};\n  -moz-box-shadow: 0 0 1px\n    ${({\n      theme: {\n        colors: { shadow },\n      },\n    }) => shadow};\n  -webkit-box-shadow: 0 0 1px\n    ${({\n      theme: {\n        colors: { shadow },\n      },\n    }) => shadow};\n  box-shadow: 0 0 1px\n    ${({\n      theme: {\n        colors: { shadow },\n      },\n    }) => shadow};\n`;\n\nexport const Card: React.FunctionComponent<CardComponentProps> = (\n  props: CardComponentProps\n) => (\n  // @ts-ignore - No overload matched this call\n  <CardBase {...props} />\n);\n","import * as styledComponents from 'styled-components';\nimport { Theme } from './theme';\n\nconst { default: styled, css, ThemeProvider } = styledComponents;\n\nexport interface IStyledTheme {\n  theme: Theme;\n}\n\nexport { css, ThemeProvider, styled };\n","import React from 'react';\nimport { Col, Row } from 'react-grid-system';\nimport styled, { useTheme } from 'styled-components';\nimport _ from 'lodash';\nimport { BoxComponentProps } from './box.component.props';\nimport { spacing } from '../../../utils';\nimport { Spinner } from 'components/primitive';\n\nexport const Box: React.FunctionComponent<BoxComponentProps> = (props: BoxComponentProps) => {\n  const { colors } = useTheme();\n\n  const {\n    row,\n    borderRadius,\n    spaceBetween,\n    flex,\n    hidden,\n    bottom,\n    children,\n    color,\n    height,\n    width,\n    maxHeight,\n    maxWidth,\n    hCenter,\n    vCenter,\n    marginTop,\n    marginBottom,\n    marginLeft,\n    marginRight,\n    marginHorizontal,\n    marginVertical,\n    margin,\n    paddingTop,\n    paddingBottom,\n    paddingLeft,\n    paddingRight,\n    paddingHorizontal,\n    paddingVertical,\n    padding,\n    gap,\n    wrap,\n    rightAlign,\n    centerAlign,\n    loading,\n    style: styleOverride,\n    ...rest\n  } = props;\n\n  // padding values in the four directions\n  // the priority is in order as they are declared\n  const paddingTopValue = paddingTop ?? paddingVertical ?? padding ?? 0;\n  const paddingBottomValue = paddingBottom ?? paddingVertical ?? padding ?? 0;\n  const paddingLeftValue = paddingLeft ?? paddingHorizontal ?? padding ?? 0;\n  const paddingRightValue = paddingRight ?? paddingHorizontal ?? padding ?? 0;\n\n  // padding values in the four directions\n  // the priority is in order as they are declared\n  const marginTopValue = marginTop ?? marginVertical ?? margin ?? 0;\n  const marginBottomValue = marginBottom ?? marginVertical ?? margin ?? 0;\n  const marginLeftValue = marginLeft ?? marginHorizontal ?? margin ?? 0;\n  const marginRightValue = marginRight ?? marginHorizontal ?? margin ?? 0;\n\n  //max-width\n  const _maxWidth = maxWidth ?? width;\n\n  // bottom align and right align cssProperties based on the flex direction\n  const _bottomAlign = row ? { alignItems: 'flex-end' } : { justifyContent: 'flex-end' };\n  const _rightAlign = row ? { justifyContent: 'flex-end' } : { alignItems: 'flex-end' };\n\n  const style: React.CSSProperties = {\n    display: 'flex',\n    flexDirection: row ? 'row' : 'column',\n    minHeight: 'auto',\n    gap: `${gap}rem`,\n    ...(!_.isNil(flex) ? { flex: flex } : {}),\n    ...(!_.isNil(borderRadius) ? { borderRadius: `${borderRadius}rem` } : {}),\n    ...(!_.isNil(color) ? { backgroundColor: colors[color] } : {}),\n    ...(!_.isNil(hCenter || loading) ? { alignItems: 'center' } : {}),\n    ...(!_.isNil(vCenter || loading) ? { justifyContent: 'center' } : {}),\n    ...(!_.isNil(height) ? { height: `${height}rem` } : {}),\n    ...(!_.isNil(width) ? { width: `${width}rem` } : {}),\n    ...(!_.isNil(maxWidth) ? { maxWidth: `${_maxWidth}rem` } : {}),\n    ...(!_.isNil(maxHeight) ? { maxHeight: `${maxHeight}rem` } : {}),\n    ...(!_.isNil(wrap) ? { flexWrap: 'wrap' } : {}),\n\n    ...{\n      marginTop: _.isNumber(marginTopValue) ? `${marginTopValue}rem` : `${spacing[marginTopValue]}rem`,\n    }, //margin top\n    ...{\n      marginBottom: _.isNumber(marginBottomValue) ? `${marginBottomValue}rem` : `${spacing[marginBottomValue]}rem`,\n    }, //margin bottom\n    ...{\n      marginLeft: _.isNumber(marginLeftValue) ? `${marginLeftValue}rem` : `${spacing[marginLeftValue]}rem`,\n    }, //margin left\n    ...{\n      marginRight: _.isNumber(marginRightValue) ? `${marginRightValue}rem` : `${spacing[marginRightValue]}rem`,\n    }, //margin right\n\n    ...{\n      paddingTop: _.isNumber(paddingTopValue) ? `${paddingTopValue}rem` : `${spacing[paddingTopValue]}rem`,\n    }, //padding top\n    ...{\n      paddingBottom: _.isNumber(paddingBottomValue) ? `${paddingBottomValue}rem` : `${spacing[paddingBottomValue]}rem`,\n    }, //padding bottom\n    ...{\n      paddingLeft: _.isNumber(paddingLeftValue) ? `${paddingLeftValue}rem` : `${spacing[paddingLeftValue]}rem`,\n    }, //padding left\n    ...{\n      paddingRight: _.isNumber(paddingRightValue) ? `${paddingRightValue}rem` : `${spacing[paddingRightValue]}rem`,\n    }, //padding right\n\n    ...(!!bottom ? _bottomAlign : {}),\n    ...(!!rightAlign ? _rightAlign : {}),\n    ...(!!centerAlign ? { justifyContent: 'center', alignItems: 'center' } : {}),\n\n    ...(!!spaceBetween ? { justifyContent: 'space-between' } : {}),\n    ...styleOverride,\n  };\n\n  const Layout: any = row ? Row : Col;\n\n  // const Base = styled(Layout)<BoxComponentProps>``;\n\n  if (hidden) {\n    return <></>;\n  }\n\n  if (loading) {\n    return (\n      <Layout style={style} {...rest}>\n        <Spinner />\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout style={style} {...rest}>\n      {children}\n    </Layout>\n  );\n};\n","import { BoxComponentProps } from '../box/box.component.props';\nimport { IconProps } from '../icon-svg/icon-svg.component.props';\nimport { TextComponentProps } from '../text/text.component.props';\n\nexport enum Variant {\n  /**\n   * Medium sized Button\n   */\n  primary = 'primary',\n\n  /**\n   * Small sized Button.\n   */\n  small = 'small',\n\n  /**\n   * Outlined transparant Button.\n   */\n  ghost = 'ghost',\n}\n\nexport interface ButtonComponentProps extends BoxComponentProps {\n  /**\n   * label for Text Component\n   */\n  label: TextComponentProps;\n\n  /**\n   * option to use diffent variants. Primary is the default variant.\n   */\n  variant: keyof typeof Variant;\n\n  /**\n   * sets the outlined Button.\n   */\n  outlined?: boolean;\n\n  /**\n   * Allows to use Icons with Button.\n   */\n  icon?: IconProps;\n\n  /**\n   * To Support loading indicator on Buttons.\n   */\n  loading?: boolean;\n\n  /**\n   * function will be triggered when the Button is clicked\n   */\n  onClick: () => void;\n}\n","import styled, { withTheme } from 'styled-components';\nimport { ImageComponentProps } from './image.component.props';\nimport { IStyledTheme } from '../../../themes/styled-components';\n\nexport const StyledImage = styled.img<ImageComponentProps>`\n  width: ${({ width }) => (width ? `${width}rem` : '100%')};\n  height: ${({ height }) => (height ? `${height}rem` : 'auto')};\n  border-radius: ${({ rounded }) => (rounded ? '50%' : '')};\n  border-radius: ${({ borderRadius }) => (borderRadius ? `${borderRadius}rem` : 'auto')};\n`;\n\nexport const Image: React.FunctionComponent<ImageComponentProps> = withTheme(\n  (props: ImageComponentProps & IStyledTheme) => {\n    const {\n      src,\n      alt,\n      name,\n      theme: { images },\n      ...rest\n    } = props;\n\n    const url = name ? images[name] : src;\n\n    return <StyledImage src={url} alt={alt} {...rest} />;\n  }\n);\n","/**\n * Different screen sizes used across the screens.\n */\nexport enum BreakPoints {\n  small = '480px',\n  medium = '768px',\n  large = '1040px',\n  xLarge = '1200px',\n}\n","/**\n *  Common Spacing values used throught the application.\n */\n\nexport const spacing = {\n  tiny: 0.6,\n  small: 1.9,\n  medium: 2.2,\n  large: 2.6,\n};\n\nexport type SpacingTypes = keyof typeof spacing;\n","import { Color, Image } from '../../../themes';\n\n/**\n * Different Sizes that are supported by Icon Component.\n **/\nexport enum Size {\n  small = 14,\n  medium = 18,\n  large = 32,\n  xLarge = 40,\n}\n\nexport interface IconProps {\n  /**\n   * Name of the SVG icon that is available in the theme.\n   **/\n  name: Image;\n\n  /**\n   * Different sizes supported by the Icon Component.\n   **/\n  size?: keyof typeof Size;\n\n  /**\n   * Colors that are available in the theme.\n   **/\n  color?: Color;\n}\n","import styled, { keyframes } from 'styled-components';\nimport { ButtonComponentProps } from './button.component.props';\nimport { Box } from '../box/box.component';\nimport { Text } from '../text/text.component';\n\n/**\n * Styles for Base Button.\n */\nexport const BaseButton = styled(Box)<ButtonComponentProps>`\n  height: 5rem;\n  width: fit-content;\n  padding: 1.2rem 0.6rem !important;\n  min-width: 14.2rem !important;\n  border-radius: 0.4rem;\n  border: none;\n  cursor: pointer;\n`;\n\n/**\n * Styles for Primary Button.\n */\nexport const PrimaryButton = styled(BaseButton)<ButtonComponentProps>`\n  background-color: ${({ theme: { colors } }) => colors.primary} !important;\n`;\n\n/**\n * Styles for Ghost Button.\n */\nexport const GhostButton = styled(BaseButton)<ButtonComponentProps>`\n  border: 2px solid ${({ theme: { colors } }) => colors.borderLightest} !important;\n  background-color: transparent;\n`;\n\n/**\n * Styles for Small Button.\n */\nexport const SmallButton = styled(Box)<ButtonComponentProps>`\n  width: fit-content;\n  min-width: 14.2rem !important;\n  height: 4.2rem;\n  background: ${({ theme: { colors } }) => colors.primary} !important;\n  border-radius: 0.4rem;\n`;\n\n/**\n * Key Frame for spinner.\n */\nconst spin = keyframes`\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n`;\n\n/**\n * Styles for Spinner\n */\nexport const Spinner = styled.div`\n  border: 0.4rem solid ${({ theme: { colors } }) => colors.spinnerBorder};\n  border-top: 0.4rem solid ${({ theme: { colors } }) => colors.white};\n  border-radius: 50%;\n  width: 2.5rem;\n  height: 2.5rem;\n  animation: ${spin} 0.6s linear infinite;\n`;\n\n/**\n * Styles for IconWrapper.\n */\nexport const IconWrapper = styled.span`\n  margin: 0 2rem 0 -2rem;\n`;\n\n/**\n * styles for Button Label. default color will be white it can be overridden by passing color props.\n */\nexport const ButtonText = styled(Text)`\n  color: ${({ theme: { colors } }) => colors.white};\n`;\n","import styled from 'styled-components';\nimport { IconSvg } from 'components/primitive';\nimport { PrimaryButton, SmallButton, GhostButton, IconWrapper, ButtonText, Spinner } from './button.component.styles';\nimport { ButtonComponentProps, Variant } from './button.component.props';\n\nexport const Button: React.FunctionComponent<ButtonComponentProps> = (props: ButtonComponentProps) => {\n  const { variant, label, icon, loading, onClick, ...rest } = props;\n\n  const getVariant = (variant: Variant = Variant.primary) => {\n    let ButtonComponent;\n    switch (variant) {\n      case Variant.primary:\n        ButtonComponent = PrimaryButton;\n        break;\n      case Variant.small:\n        ButtonComponent = SmallButton;\n        break;\n      case Variant.ghost:\n        ButtonComponent = GhostButton;\n        break;\n\n      default:\n        ButtonComponent = PrimaryButton;\n    }\n    return ButtonComponent;\n  };\n\n  const StyledButton = getVariant(Variant[variant]);\n\n  /**\n   * custom styling goes here.\n   */\n  const StyledButtonComponent = styled(StyledButton)<ButtonComponentProps>`\n    background: ${({ color, theme: { colors } }) => color && colors[color]} !important;\n  `;\n\n  return (\n    // @ts-ignore - No overload matched this call.\n    <StyledButtonComponent row vCenter hCenter {...rest} onClick={onClick}>\n      {icon && (\n        <IconWrapper>\n          <IconSvg {...icon} />\n        </IconWrapper>\n      )}\n      {loading && <Spinner />} <ButtonText  {...label} /> \n    </StyledButtonComponent>\n  );\n};\n","import styled from 'styled-components';\nimport { BreakPoints } from 'utils';\nimport { DropDownComponentProps } from './drop-down.component.props';\n\n/**\n * Styles for DropDown Select Wrapper\n */\nexport const DropdownWrapper = styled.div<DropDownComponentProps>`\n  display: flex;\n  width: ${({ wide }) => (wide ? '40rem' : '100%')} !important;\n  flex-flow: column;\n  justify-content: flex-start;\n\n  @media screen and (max-width: ${BreakPoints.medium}) and (max-width: ${BreakPoints.small}) {\n    width: 100% !important;\n  }\n`;\n\n/**\n * Styles for Label\n */\nexport const StyledLabel = styled.label`\n  display: inline;\n  color: ${({ theme: { colors } }) => colors.textLight};\n  font-size: 1.6rem;\n  font-weight: 500 !important;\n  margin-bottom: 1rem;\n`;\n\n/**\n * This styled will be applied while using Validations\n */\nexport const Icon = styled.span`\n  display: inline-block;\n  position: absolute;\n  height: 4rem;\n  width: 4rem;\n  top: 0.3rem;\n  /* left: 36.5rem; */\n`;\n\n/**\n * Error message container\n */\nexport const ErrorMessageContainer = styled.fieldset`\n  margin: 0.4rem 0 0.4rem 0;\n  position: relative;\n`;\n","import { palette } from './palette';\n\nexport const colors = {\n  white: palette.white,\n  black: palette.black,\n  primary: palette.royalBlue,\n  primaryGradient: palette.blueIndigoGradient,\n  textDark: palette.grey,\n  textLight: palette.greyLight,\n  textLighter: palette.greyLighter, //placeholder and borders,\n  success: palette.green,\n  successLight: palette.greenLight, //text\n  successLighter: palette.greenTransparent, // Transparent Backgrounds\n  successLightest: palette.greenLighter, // alert background\n  error: palette.red,\n  errorLight: palette.redLight, //text\n  errorLighter: palette.redTransparent,\n  errorLightest: palette.redLighter, // alert background\n  infoLight: palette.blueLight, // alert text\n  infoLightest: palette.blueLighter, // alert background\n  link: palette.royalBlueLight,\n  warning: palette.yellow,\n  warningLight: palette.yellowLight, //text\n  warningLightest: palette.yellowLighter, // alerr background\n  shadow: palette.shadow,\n  modalBackdrop: palette.grayTransparent,\n  border: palette.grey,\n  borderLight: palette.greyLight,\n  borderLighter: palette.greyLighter,\n  borderLightest: palette.greyLightest,\n  navLinkActive: palette.royalBlueTransparent,\n  applicationBackground: palette.whiteLiac,\n  bottomAccent: palette.offWhite, // used in Modal window and form.\n  spinnerBorder: palette.greyLighter,\n  toggleSwitchBackground: palette.royalBlueLighter,\n  lightGray: palette.lightGray,\n  shimmer: palette.silverLight, //used in shimmer effect.\n};\n\nexport type Colors = typeof colors;\nexport type Color = keyof typeof colors;\n","export const images = {\n  arrowDown: require('../assets/icons/arrow_down.svg').default,\n  arrowLeft: require('../assets/icons/arrow_left.svg').default,\n  arrowRight: require('../assets/icons/arrow_right.svg').default,\n  hamburgerMenu: require('../assets/icons/hamburger_menu.svg').default,\n  add: require('../assets/icons/add.svg').default,\n  arrowUp: require('../assets/icons/arrow_up.svg').default,\n  bitcoin: require('../assets/icons/bitcoin.svg').default,\n  calender: require('../assets/icons/calender.svg').default,\n  check: require('../assets/icons/check.svg').default,\n  checkActive: require('../assets/icons/check_active.svg').default,\n  claim: require('../assets/icons/claims.svg').default,\n  close: require('../assets/icons/close.svg').default,\n  copy: require('../assets/icons/copy.svg').default,\n  darkMode: require('../assets/icons/darkMode.svg').default,\n  dashboard: require('../assets/icons/dashboard.svg').default,\n  dayMode: require('../assets/icons/dayMode.svg').default,\n  discord: require('../assets/icons/discord.svg').default,\n  discordFull: require('../assets/icons/discord-full.svg').default,\n  edit: require('../assets/icons/edit.svg').default,\n  externalLink: require('../assets/icons/external_link.svg').default,\n  feedback: require('../assets/icons/feedback.svg').default,\n  github: require('../assets/icons/github.svg').default,\n  google: require('../assets/icons/google.svg').default,\n  guarding: require('../assets/icons/guarding.svg').default,\n  heart: require('../assets/icons/heart.svg').default,\n  info: require('../assets/icons/info.svg').default,\n  infoActive: require('../assets/icons/info_active.svg').default,\n  inherit: require('../assets/icons/inherit.svg').default,\n  lock: require('../assets/icons/lock.svg').default,\n  locked: require('../assets/icons/locked.svg').default,\n  pending: require('../assets/icons/pending.svg').default,\n  metaMask: require('../assets/icons/metamask.svg').default,\n  money: require('../assets/icons/money.svg').default,\n  notification: require('../assets/icons/notification.svg').default,\n  placeHolderAvatar: require('../assets/images/demo.png').default,\n  profile: require('../assets/icons/profile.svg').default,\n  safes: require('../assets/icons/safes.svg').default,\n  twitter: require('../assets/icons/twitter.svg').default,\n  upload: require('../assets/icons/upload.svg').default,\n  user: require('../assets/icons/user.svg').default,\n  avatar: require('../assets/icons/avatar.svg').default,\n  error: require('../assets/icons/error.svg').default,\n  checkSuccess: require('../assets/icons/checkSuccess.svg').default,\n  active: require('../assets/icons/active.svg').default,\n  shield: require('../assets/icons/shield.svg').default,\n  checked: require('../assets/icons/checked.svg').default,\n  successAlert: require('../assets/icons/success-alert.svg').default,\n  warningAlert: require('../assets/icons/warning-alert.svg').default,\n  infoAlert: require('../assets/icons/info-alert.svg').default,\n  errorAlert: require('../assets/icons/error-alert.svg').default,\n  safientAvatar: require('../assets/logo/safient_avatar.png').default,\n  loginWithGoogle: require('../assets/icons/login-google.svg').default,\n  loginWithGitHub: require('../assets/icons/login-github.svg').default,\n  loginWithMetaMask: require('../assets/icons/login-metamask.svg').default,\n  lockLoader: require('../assets/icons/lockLoader.gif').default,\n  safientWalletLogo: require('../assets/logo/logo.svg').default,\n  safientWallet: require('../assets/icons/safientWallet.svg').default,\n  landingPage: require('../assets/images/landing-page.svg').default,\n};\n\nexport type Images = typeof images;\nexport type Image = keyof typeof images;\n","import { createGlobalStyle } from 'styled-components';\nimport { primaryFont } from './typography';\nimport { normalize } from 'polished';\n\n/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nexport const GlobalStyle = createGlobalStyle`\n${normalize()}\nhtml {\n  box-sizing: border-box;\n   font-size: 62.5%; // 1rem = 10px, 10px/16px = 62.5%\n}\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 62.5%; // 1rem = 10px, 10px/16px = 62.5%\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\n\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n  outline: 0;\n\tpadding: 0;\n\tmargin: 0;\n\tborder: 0;\n}\nbody {\n  line-height: 1;\n  background-color:#F6F7FB;\n  font-family: ${primaryFont};\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n`;\n","export const primaryFont = '\"Inter\", sans-serif';\n\nexport const FONT_SIZE = {\n  regular: '1.6rem',\n  medium: '2rem', //20px- base size is 10px so its 2rem.\n};\n\nexport const FONT_WEIGHT = {\n  medium: 500,\n  bolder: 600,\n};\nexport const ALIGNMENTS = {\n  left: 'left',\n  right: 'right',\n  center: 'center',\n  justify: 'justify',\n};\n\nexport const LINE_HEIGHTS = {\n  body: 1.5,\n  heading: 1.2,\n};\n","import styled from 'styled-components';\nimport { Color } from '../../../themes';\n\ninterface SvgWrapperProps {\n  color?: Color;\n}\n\nexport const SvgWrapper = styled.div<SvgWrapperProps>`\n  display: inline-block;\n  fill: ${({ color, theme: { colors } }) => (color ? colors[color] : colors.black)};\n  cursor: pointer;\n`;\n","import React from 'react';\nimport { ReactSVG } from 'react-svg';\nimport { withTheme } from 'styled-components';\nimport { IconProps, Size } from './icon-svg.component.props';\nimport { SvgWrapper } from './icon-svg.component.style';\nimport { IStyledTheme } from '../../../themes/styled-components';\n\nexport const IconSvg: React.FunctionComponent<IconProps> = withTheme((props: IconProps & IStyledTheme) => {\n  const {\n    size = 'medium',\n    color,\n    name,\n    theme: { images },\n  } = props;\n\n  return (\n    <SvgWrapper color={color}>\n      <ReactSVG\n        src={images[name]}\n        beforeInjection={(svg) => {\n          svg.setAttribute('width', `${Size[size]}px`);\n          svg.setAttribute('height', `${Size[size]}px`);\n        }}\n      />\n    </SvgWrapper>\n  );\n});\n","export const palette = {\n  black: '#000000',\n  white: '#FFFFFF',\n  whiteLiac: '#F6F7FB', //app background\n  offWhite: '#F9FAFB', // model, card bg\n  aquaBlue: '#055160', // text color\n  aquaBlueLight: '#cff4fc', //background\n  aquaBlueLighter: '#b6effb', //border\n  royalBlue: '#5452F6', //button backgrounds\n  royalBlueLight: 'rgba(84, 82, 246, 0.1)', //alert, icon backgrounds\n  royalBlueLighter: '#6366f1', // Toggle Switch\n  royalBlueTransparent: 'rgba(84, 82, 246, 0.1)', // NavLink active color\n\n  blueLight: '#46A1CB', // info alert text\n  blueLighter: '#e5f6fd', // info alert bg\n\n  green: '#2ba745',\n  greenLight: '#49B393', //green text color\n  greenLighter: '#edf7ed', //alert bg\n  greenLightest: '#badbcc', //for border\n  greenTransparent: 'rgba(73, 179, 147, 0.1)',\n  greenDark: '#065f43', //for icons\n  yellow: '#ffc107', //default yellow color\n  yellowLight: '#CB974E', //for text\n  yellowLighter: '#fff4e5', //alert bg\n  yellowLightest: '#ffecb5', //border\n  red: '#dc3545',\n  redLight: '#D55555', //text color\n  redLighter: '#fdeded', // alert bg\n  redLightest: '#f5c2c7', //borders\n  redTransparent: 'rgba(255, 162, 136, 0.1)',\n  grey: '#28293d', // default dark headings\n  greyLight: '#555770', // light heading, body text\n  greyLighter: '#8E90A6', //for placeholders and secondary button\n  greyLightest: '#C7C8D9', //for border\n  grayTransparent: 'rgba(98, 108, 116, 0.4)', //model backdrop\n  shadow: ' 0px 16px 32px rgba(221, 230, 237, 0.4)',\n  blueIndigoGradient: 'linear-gradient(89.58deg, #44BCF0 -19.85%, #818CF8 54.07%, #A099FF 120.75%)',\n  lightGray: '#eeeefe',\n  silverLight: '#e1e1e1',\n};\n\nexport type Palette = typeof palette;\n","import React from 'react';\nimport { styled } from 'themes';\nimport { Button } from '../button/button.component';\nimport { Card } from '../card/card.component';\nimport { Text } from '../text/text.component';\nimport { Image } from '../image/image.component';\nimport { AccessSafeComponentProps } from './access-safe.component.props';\n\nconst Container = styled(Card)`\n  max-width: 90rem !important;\n  max-height: 50rem !important;\n  padding: 0 !important;\n`;\n\nconst Content = styled(Card)``;\n\nconst CancelButton = styled(Button)`\n  display: flex;\n  justify-content: center !important;\n  align-items: center !important;\n  height: 4rem;\n  margin: 1rem !important;\n  background-color: ${({ theme: { colors } }) => colors.lightGray} !important;\n  border: none !important;\n  color: ${({ theme: { colors } }) => colors.black} !important;\n  cursor: pointer;\n  z-index: 999;\n`;\nconst SuccessButton = styled(Button)`\n  height: 4rem;\n  margin: 1rem !important;\n  cursor: pointer;\n  z-index: 999;\n`;\n\nconst Steper = styled.div`\n  position: absolute;\n  top: 1.5rem;\n  right: 1.5rem;\n`;\n\nconst SubContainer = styled.div``;\n\nconst Title = styled(Text)``;\n\nexport const AccessSafe: React.FC<AccessSafeComponentProps> = (\n  props: AccessSafeComponentProps\n) => {\n  const { items, pageIndex } = props;\n\n  const currentItem = items[pageIndex];\n  const { title, subHeader, description, image, previousButton, nextButton } =\n    currentItem;\n\n  return (\n    <Container>\n      <Content hCenter spaceBetween paddingVertical=\"large\">\n        <Title variant=\"title\" color=\"primary\" {...title} />\n        <Steper>\n          <Card row vCenter hCenter hidden={items.length === 1}>\n            <Text text=\"Step\" />\n            <Card\n              marginLeft=\"tiny\"\n              borderRadius={1.5}\n              paddingHorizontal=\"tiny\"\n              color=\"applicationBackground\"\n            >\n              <Text text={`${pageIndex + 1} / ${items.length}`} />\n            </Card>\n          </Card>\n        </Steper>\n        {image && <Image height={7} width={7} {...image} />}\n        <SubContainer>\n          <Card hCenter>\n            <Text variant=\"contentHeader\" {...subHeader} />\n          </Card>\n          <Card hCenter>\n            <Text variant=\"content\" {...description} />\n          </Card>\n        </SubContainer>\n      </Content>\n      <Card row bottom rightAlign>\n        {!previousButton && (\n          <CancelButton\n            label={{ text: 'Cancel' }}\n            variant=\"ghost\"\n            onClick={() => {}}\n          />\n        )}\n        {/* @ts-ignore */}\n        {previousButton && <CancelButton {...previousButton} />}\n        {!nextButton && (\n          <SuccessButton\n            label={{ text: 'Continue' }}\n            variant=\"primary\"\n            onClick={() => {}}\n          />\n        )}\n        {/* @ts-ignore */}\n        {nextButton && <SuccessButton {...nextButton} />}\n      </Card>\n    </Container>\n  );\n};\n","/**\n * Defining all the route paths\n * For adding any new route the path of the route have to add here\n */\nexport enum RoutePath {\n  home = '/',\n  login = '/login',\n  register = '/register',\n  account = '/account',\n  notFound = '/page-not-found',\n  welcome = '/welcome',\n  createWallet = '/create-wallet',\n  walletOverview = '/wallet-overview',\n  walletClaim = '/wallet-claim',\n  walletSettings = '/wallet-settings',\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { NavlinkComponentProps } from './navlink.component.props';\nimport { Box } from '../box/box.component';\nimport { Text } from '../text/text.component';\nimport { IconSvg } from '../icon-svg/icon-svg.component';\nimport { Link } from 'react-router-dom';\n\nconst NavlinkContainer = styled(Box)`\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Navlink: React.FunctionComponent<NavlinkComponentProps> = (props: NavlinkComponentProps) => {\n  const { active, label, icon, onClick, path, ...rest } = props;\n\n  return (\n    // @ts-ignore - No overload matches this call\n    <NavlinkContainer\n      row\n      hCenter\n      margin='tiny'\n      paddingHorizontal='small'\n      paddingVertical='tiny'\n      color={active ? 'navLinkActive' : 'white'}\n      onClick={onClick}\n      {...rest}\n    >\n      <IconSvg {...icon} />\n      <Box marginLeft='tiny'>\n        <StyledLink to={path}>\n          <Text bold size='small' lineHeight={2.4} color='black' {...label} />\n        </StyledLink>\n      </Box>\n    </NavlinkContainer>\n  );\n};\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport { IconSvg, Text } from '..';\nimport { TooltipComponentProps } from './tooltip.component.props';\n\nexport const Tooltip: React.FunctionComponent<TooltipComponentProps> = (props: TooltipComponentProps) => {\n  const { icon, text } = props;\n\n  return (\n    <>\n      <Text data-tip={text} style={{ width: 'fit-content' }}>\n        {icon ? <IconSvg {...icon} /> : <IconSvg color='primary' name='info' />}\n      </Text>\n      <ReactTooltip />\n    </>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { styled } from 'themes';\nimport { SidePanelComponentProps } from './side-panel.component.props';\nimport { Card } from '../card/card.component';\n\nconst PanelContainer = styled.div`\n  height: 100% !important;\n  display: flex;\n  flex-direction: column;\n  border-right: 1px solid;\n  border-radius: 0;\n  z-index: 999;\n  background-color: ${({ theme: { colors } }) => colors.white};\n  transition: 0.8s ease;\n  position: absolute;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  width: 30vw;\n\n  @media (max-width: 768px) {\n    width: 100vw;\n  }\n`;\n\nconst ContentContainer = styled(Card)`\n  padding: 3rem !important;\n`;\n\nexport const SidePanel: React.FC<SidePanelComponentProps> = (\n  props: SidePanelComponentProps\n) => {\n  const { show, onClose, togglePanel, children } = props;\n\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  const closePanel = () => {\n    onClose();\n  };\n\n  const onEscapeKeydown = (event: KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      closePanel();\n    }\n  };\n\n  React.useEffect(() => {\n    document.addEventListener('keydown', onEscapeKeydown, false);\n\n    return () => {\n      document.removeEventListener('keydown', onEscapeKeydown, false);\n    };\n  }, []);\n\n  useEffect(() => {\n    function handleClickOutside(event: any) {\n      if (wrapperRef.current && !wrapperRef.current?.contains(event.target)) {\n        closePanel();\n      }\n    }\n\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef]);\n\n  if (!show) {\n    return <></>;\n  }\n\n  return (\n    <React.Fragment>\n      <PanelContainer ref={wrapperRef}>\n        <ContentContainer>{children}</ContentContainer>\n      </PanelContainer>\n    </React.Fragment>\n  );\n};\n","import styled, { keyframes } from 'styled-components';\nimport { Text } from '../text/text.component';\n\n/**\n * Key Frame for spinner.\n */\nconst spin = keyframes`\n 0% {\n     transform: rotate(0deg);\n }\n 100% {\n     transform: rotate(360deg);\n }\n`;\n\n/**\n * Styles for Spinner\n */\nexport const SpinnerContainer = styled.div`\n  border: 0.3rem solid ${({ theme: { colors } }) => colors.primary};\n  border-top: 0.3rem solid ${({ theme: { colors } }) => colors.white};\n  border-radius: 50%;\n  width: 4rem;\n  height: 4rem;\n  animation: ${spin} 0.6s linear infinite;\n`;\n\nexport const Spinner = () => {\n  return (\n    <>\n      <SpinnerContainer />;\n      <Text variant='small' text='Loading' />\n    </>\n  );\n};\n","import { TextComponentProps } from 'components/primitive/text/text.component.props';\n\n/**\n * Based on the varient background color will be rendered.\n */\nexport enum Variant {\n  success = 'success',\n  warning = 'warning',\n  error = 'error',\n  info = 'info',\n}\n\n/**\n * we are using Box Component as a wrapper. so Text color won't be inherited based on varient.\n */\nexport enum TextColors {\n  success = 'successLight',\n  warning = 'warningLight',\n  error = 'errorLight',\n  info = 'infoLight',\n}\n\nexport enum IconName {\n  success = 'successAlert',\n  warning = 'warningAlert',\n  error = 'errorAlert',\n  info = 'infoAlert',\n}\n\n/**\n * Props supported by Alert Component.\n */\nexport interface AlertComponentProps {\n  label: TextComponentProps;\n  icon?: boolean;\n  variant: keyof typeof Variant;\n  textColor?: keyof typeof TextColors;\n}\n","import styled from 'styled-components';\nimport { Box, Text } from 'components/primitive';\nimport { AlertComponentProps } from './alert.component.props';\n\n/**\n * Base style which can be inherited.\n */\nexport const Base = styled(Box)<AlertComponentProps>`\n  max-width: 55rem !important;\n  flex: 0 !important;\n  background: ${({ theme: { colors } }) => colors.success};\n  color: ${({ theme: { colors } }) => colors.primary} !important;\n  padding: 2rem !important ;\n  border-radius: 0.5rem;\n  gap: 1rem;\n  flex-wrap: nowrap !important;\n`;\n\n/**\n * Styles for success variant\n */\nexport const SuccessAlert = styled(Base)`\n  background: ${({ theme: { colors } }) => colors.successLighter};\n`;\n\n/**\n * Styles for Error variant\n */\nexport const ErrorAlert = styled(Base)`\n  background: ${({ theme: { colors } }) => colors.errorLightest};\n`;\n\n/**\n * Styles for Warning variant\n */\nexport const WarningAlert = styled(Base)`\n  background: ${({ theme: { colors } }) => colors.warningLightest};\n`;\n\n/**\n * Styles for Info variant\n */\nexport const InfoAlert = styled(Base)`\n  background: ${({ theme: { colors } }) => colors.infoLightest};\n`;\n\n/**\n * Styles for Alert Text\n */\nexport const AlertText = styled(Text)`\n  line-height: 1.5;\n`;\n","import { IconSvg } from 'components/primitive';\nimport { AlertComponentProps, Variant } from './alert.component.props';\nimport { AlertText } from './alert.component.styles';\nimport { getVariant } from './alert.component.utils';\n\nexport const Alert: React.FC<AlertComponentProps> = (props) => {\n  const { label, variant, icon } = props;\n\n  const baseAlert = getVariant(variant ? Variant[variant] : undefined);\n  const { alertComponent: AlertComponent, iconName, textColor } = baseAlert;\n\n  return (\n    // @ts-ignore - No overload matched this call.\n    <AlertComponent row hCenter>\n      {icon && <IconSvg color={textColor} name={iconName} />}\n      <AlertText variant='content' color={textColor} {...label} />\n    </AlertComponent>\n  );\n};\n","import { Variant, TextColors, IconName } from './alert.component.props';\nimport { WarningAlert, ErrorAlert, SuccessAlert, InfoAlert } from './alert.component.styles';\n\n/**\n *\n * @param variant\n * @returns style based on Variant passed by user.\n */\n\nexport const getVariant = (variant: Variant = Variant.success) => {\n  let alertComponent, textColor, iconName;\n\n  switch (variant) {\n    case Variant.warning:\n      alertComponent = WarningAlert;\n      textColor = TextColors.warning;\n      iconName = IconName.warning;\n      break;\n\n    case Variant.error:\n      alertComponent = ErrorAlert;\n      textColor = TextColors.error;\n      iconName = IconName.error;\n      break;\n\n    case Variant.info:\n      alertComponent = InfoAlert;\n      textColor = TextColors.info;\n      iconName = IconName.info;\n      break;\n\n    default:\n      alertComponent = SuccessAlert;\n      textColor = TextColors.success;\n      iconName = IconName.success;\n  }\n\n  return { alertComponent, iconName, textColor };\n};\n","import { ImageComponentProps } from '../image/image.component.props';\n\nexport enum Variant {\n  /**\n   * Small sized avatar\n   */\n  small = 'small',\n\n  /**\n   * Medium sized avatar.\n   */\n  medium = 'medium',\n\n  /**\n   * Large sized avatar.\n   */\n  large = 'large',\n}\n\n/**\n * Different avatar sized, used in custom styling part\n */\nexport enum AvatarSize {\n  tiny = 1.5,\n  small = 3,\n  medium = 4,\n  large = 6,\n  xLarge = 10,\n}\n\nexport interface AvatarComponentProps extends ImageComponentProps {\n  /**\n   * Avatar sizes- Small is the Default size.\n   */\n  size?: keyof typeof AvatarSize;\n\n  /**\n   * sets rounded border.\n   */\n  rounded?: boolean;\n\n  /**\n    Border radius facilitates curved borders\n    */\n  borderRadius?: number;\n\n  /**\n   * sets the different variants.\n   */\n  variant?: keyof typeof Variant;\n\n  /**\n   * sets squared avatar.\n   */\n  flat?: boolean;\n}\n","import styled from 'styled-components';\nimport { AvatarComponentProps } from './avatar.component.props';\nimport { Image } from '../image/image.component';\n\n/**\n * Styles for small sized Avatar\n */\nexport const Small = styled(Image)<AvatarComponentProps>`\n  height: 3rem;\n  width: 3rem;\n  border: 1px solid white;\n  border-radius: ${({ flat }) => (flat ? '0.5rem' : '50%')};\n`;\n\n/**\n * Styles for Medium sized Avatar\n */\nexport const Medium = styled(Small)<AvatarComponentProps>`\n  height: 6rem;\n  width: 6rem;\n`;\n\n/**\n * Styles for Large sized Avatar\n */\nexport const Large = styled(Small)<AvatarComponentProps>`\n  height: 10rem;\n  width: 10rem;\n`;\n","import styled, { withTheme } from 'styled-components';\nimport { AvatarComponentProps, AvatarSize, Variant } from './avatar.component.props';\nimport { Small, Medium, Large } from './avatar.component.styles';\nimport { IStyledTheme } from '../../../themes';\n\nexport const Avatar: React.FunctionComponent<AvatarComponentProps> = withTheme(\n  (props: AvatarComponentProps & IStyledTheme) => {\n    const {\n      variant,\n      name,\n      src,\n      theme: { images },\n      ...rest\n    } = props;\n\n    /**\n     * option to use either image from external source or local image.\n     */\n    const url = name ? images[name] : src;\n\n    const getAvatarVariant = (variant: Variant = Variant.small) => {\n      let avatar;\n      switch (variant) {\n        case Variant.small:\n          avatar = Small;\n          break;\n        case Variant.medium:\n          avatar = Medium;\n          break;\n        case Variant.large:\n          avatar = Large;\n          break;\n        default:\n          avatar = Small;\n      }\n      return avatar;\n    };\n\n    const StyledAvatarComponent = getAvatarVariant(variant ? Variant[variant] : undefined);\n\n    /**\n     * custom styles goes here.\n     */\n    const AvatarComponent = styled(StyledAvatarComponent)<AvatarComponentProps>`\n      height: ${({ size }) => size && `${AvatarSize[size]}rem`};\n      width: ${({ size }) => size && `${AvatarSize[size]}rem`};\n      border-radius: ${({ borderRadius }) => `${borderRadius}rem`};\n    `;\n\n    return <AvatarComponent src={url} {...rest} />;\n  }\n);\n","import { TextComponentProps } from 'components/primitive/text/text.component.props';\nimport { BoxComponentProps } from 'components/primitive/box/box.component.props';\n\n/**\n * Different Variants of Badge Component\n */\nexport enum Variant {\n  success = 'success',\n  danger = 'danger',\n}\n\nexport interface BadgeComponentProps extends BoxComponentProps {\n  /**\n   * label for Text Component\n   */\n  label: TextComponentProps;\n\n  /**\n   * option to use diffent variants. Success is the default variant.\n   */\n  variant: keyof typeof Variant;\n}\n","import styled from 'styled-components';\nimport { Box, Text } from 'components/primitive';\n\n/**\n * Base styles for Badge Component.\n */\nexport const BaseBadge = styled(Box)`\n  height: 3.3rem !important;\n  width: fit-content;\n  padding: 1.2rem 0.6rem !important;\n  min-width: 10.5rem !important;\n  border-radius: 0.4rem;\n  border: none;\n  align-content: center !important;\n`;\n\n/**\n * Style for SuccessBadge.\n */\nexport const SuccessBadge = styled(BaseBadge)`\n  background-color: ${({ theme: { colors } }) => colors.successLighter} !important;\n`;\n\n/**\n * Style for DangerBadge.\n */\nexport const DangerBadge = styled(BaseBadge)`\n  background-color: ${({ theme: { colors } }) => colors.errorLighter} !important;\n`;\n\n/**\n * Default styles for BadgeText.\n */\nexport const BadgeText = styled(Text)`\n  color: ${({ theme: { colors } }) => colors.successLight};\n  font-size: 1.4rem;\n`;\n","import styled from 'styled-components';\n\n/**\n * Styles for Avatar Container.\n */\nexport const AvatarGroupContainer = styled.div`\n  display: inline-flex;\n  width: fit-content;\n`;\n\n/**\n * Styles used for overlaping Avatars.\n */\nexport const StyledAvatars = styled.div`\n  &:not(:last-child) {\n    margin-right: -10px;\n  }\n`;\n","import styled from 'styled-components';\nimport { Box, Avatar } from 'components/primitive';\nimport { BreakPoints } from 'utils';\n\n/**\n * Styling for main container that holds TopBar.\n */\nexport const TopBarContainer = styled(Box)`\n  background-color: ${({ theme: { colors } }) => colors.white};\n  padding: 2.5rem 35rem !important;\n  height: 8rem;\n\n  @media screen and (max-width: ${BreakPoints.medium}) {\n    padding: 2.5rem 1.8rem !important;\n  }\n\n  @media screen and (max-width: ${BreakPoints.small}) {\n    padding: 2.5rem 1.8rem !important;\n  }\n`;\n\n/**\n * Styling for Logo container.\n */\nexport const LogoWrapper = styled(Box)`\n  display: inline-block !important;\n  margin-left: 2.2rem !important;\n\n  /* @media screen and (min-width: ${BreakPoints.large}) {\n    visibility: hidden !important;\n  } */\n`;\n\n/**\n * Styling for Notification.\n */\nexport const NotificationIcon = styled(Avatar)`\n  width: 4rem;\n`;\n\n/**\n * Styling for BoxGroup container.\n */\nexport const BoxGroup = styled(Box)`\n  gap: 0.8rem;\n  margin-right: 0.7rem !important;\n  &:nth-last-child() {\n    padding: 0.8rem !important;\n  }\n`;\n","import { Image, Avatar } from 'components/primitive';\nimport { TopBarContainer, LogoWrapper, BoxGroup, NotificationIcon } from './top-bar.component.styles';\nimport { RoutePath } from 'navigation/route-path';\nimport { Link } from 'react-router-dom';\n\nexport const TopBar = () => {\n  return (\n    <TopBarContainer align={'center'} justify={'center'} hCenter vCenter row>\n      <LogoWrapper hCenter vCenter>\n      <Link to={RoutePath.home} >\n        <Image name='safientWalletLogo' width={18} />\n      </Link>\n      </LogoWrapper>\n      <BoxGroup row>\n        <NotificationIcon name='notification' size='small' />\n        <Avatar name='user' size='small' />\n      </BoxGroup>\n    </TopBarContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { BreakPoints } from 'utils';\nimport { TextAreaComponentProps } from './text-area.component.props';\n\n/**\n * Styles for TextArea Container.\n */\nexport const TextAreaContainer = styled.fieldset<TextAreaComponentProps>`\n  display: inline-flex;\n  flex-direction: column;\n\n  @media screen and (max-width: ${BreakPoints.medium}) and (max-width: ${BreakPoints.small}) {\n    width: 100% !important;\n  }\n`;\n\n/**\n * Styles for TextArea Field.\n */\nexport const StyledTextArea = styled.textarea<TextAreaComponentProps>`\n  color: ${({ error, theme: { colors } }) => (error ? colors.error : colors.textLight)};\n  font-size: 1.6rem;\n  font-weight: 500;\n  padding: 0.5em 3.5em 0.5em 1em;\n  border-radius: 0.5rem;\n  border: 1px solid ${({ error, theme: { colors } }) => (error ? colors.error : colors.borderLightest)} !important;\n  background-color: ${({ theme: { colors } }) => colors.white};\n  box-sizing: border-box;\n  width: ${({ wide }) => (wide ? '82.0rem' : '40rem')} !important;\n  height: 11.1rem;\n  outline: none;\n  resize: none;\n  overflow: hidden;\n  -moz-appearance: textfield;\n  transition: border 150ms ease-out;\n  text-overflow: ellipsis;\n\n  &:focus {\n    border-color: ${({ theme: { colors } }) => colors.primary};\n    background-color: ${({ theme: { colors } }) => colors.white};\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n  }\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 1.6rem;\n    color: ${({ theme: { colors } }) => colors.textLighter};\n  }\n`;\n\n/**\n * Styles for TextAreaField Wrapper.\n */\nexport const TextAreaWrapper = styled.div`\n  display: flex;\n`;\n\n/**\n * This styled will be applied while using Validations\n */\nexport const Icon = styled.span`\n  position: absolute;\n  height: 4rem;\n  width: 4rem;\n  top: 0.3rem;\n`;\n\n/**\n * Styles for TextArea Label.\n */\nexport const TextAreaLabel = styled.label`\n  color: ${({ theme: { colors } }) => colors.textLight};\n  font-size: 1.6rem;\n  font-weight: 500 !important;\n  margin-bottom: 1rem;\n`;\n\n/**\n * Error message container.\n */\nexport const ErrorMessageContainer = styled.fieldset`\n  margin: 0.4rem 0 0.4rem 0;\n  position: relative;\n`;\n","import styled from 'styled-components';\nimport { BreakPoints } from 'utils';\nimport { InputComponentProps } from './input.component.props';\n\n/**\n * Styles for Input Container.\n */\nexport const InputContainer = styled.fieldset<InputComponentProps>`\n  display: inline-flex;\n  flex-direction: column;\n\n  @media screen and (max-width: ${BreakPoints.medium}) and (max-width: ${BreakPoints.small}) {\n    width: 100% !important;\n  }\n`;\n\n/**\n * Styles for Input Field.\n */\nexport const StyledInput = styled.input<InputComponentProps>`\n  color: ${({ error, theme: { colors } }) => (error ? colors.error : colors.textLight)};\n  font-size: 1.6rem;\n  font-weight: 500;\n  padding: 0.5em 1em 0.5em 1em;\n  border-radius: 0.5rem;\n  border: 1px solid ${({ error, theme: { colors } }) => (error ? colors.error : colors.borderLightest)} !important;\n  outline: none;\n  box-sizing: border-box;\n  width: ${({ wide }) => (wide ? '100%' : '40rem')} !important;\n  height: 5rem;\n  background-color: ${({ theme: { colors } }) => colors.white};\n  transition: border 150ms ease-out;\n  -moz-appearance: textfield;\n  text-overflow: ellipsis;\n\n  &:focus {\n    border-color: ${({ theme: { colors } }) => colors.primary};\n    background-color: ${({ theme: { colors } }) => colors.white};\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n  }\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 1.6rem;\n    color: ${({ theme: { colors } }) => colors.textLighter};\n  }\n`;\n\n/**\n * Styles for InputField Wrapper.\n */\nexport const InputWrapper = styled.div`\n  display: inline-flex;\n`;\n\n/**\n * This styled will be applied while using Validations\n */\nexport const Icon = styled.span`\n  display: inline-block;\n  position: absolute;\n  height: 4rem;\n  width: 4rem;\n  top: 0.3rem;\n`;\n\n/**\n * Styles for Input Label.\n */\nexport const InputLabel = styled.label`\n  color: ${({ theme: { colors } }) => colors.textLight};\n  font-size: 1.6rem;\n  font-weight: 500 !important;\n  margin-bottom: 1rem;\n`;\n\n/**\n * Error message container.\n */\nexport const ErrorMessageContainer = styled.fieldset`\n  margin: 0.4rem 0 0.4rem 0;\n  position: relative;\n`;\n","import React from 'react';\nimport { Text, IconSvg } from 'components/primitive';\nimport {\n  InputContainer,\n  InputLabel,\n  InputWrapper,\n  StyledInput,\n  ErrorMessageContainer,\n  Icon,\n} from './input.component.styles';\nimport { InputComponentProps } from './input.component.props';\n\nexport const Input = ({ value, type = 'text', label, isDisabled, error, errorMsg, ...rest }: InputComponentProps) => {\n  return (\n    <InputContainer>\n      <InputLabel>{label}</InputLabel>\n      <InputWrapper>\n        <StyledInput value={value} type={type} error={error} {...rest} />\n      </InputWrapper>\n\n      {error && (\n        <ErrorMessageContainer>\n          <Icon>\n            <IconSvg name='error' size='medium' />\n          </Icon>\n          <Text variant='small' color='error' paddingLeft={2.4}>\n            {errorMsg}\n          </Text>\n        </ErrorMessageContainer>\n      )}\n    </InputContainer>\n  );\n};\n","import styled, { keyframes } from 'styled-components';\nimport { Text } from 'components/primitive';\nimport { BreakPoints } from 'utils';\n\n/**\n * KeyFrame Animation.\n */\nconst spin = keyframes`\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n       transform: rotate(360deg);\n       }\n`;\n\n/**\n * Styles for Loading Spinner.\n */\nexport const Spinner = styled.div`\n  border: 0.4rem solid ${({ theme: { colors } }) => colors.spinnerBorder};\n  border-top: 0.4rem solid ${({ theme: { colors } }) => colors.primary};\n  border-radius: 50%;\n  width: 4rem;\n  height: 4rem;\n  animation: ${spin} 0.6s linear infinite;\n`;\n\n/**\n * Styles for NoticeLoaderContainer.\n */\nexport const NoticeLoaderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0.5rem;\n  align-items: center;\n  justify-content: center;\n  background: ${({ theme: { colors } }) => colors.white};\n  min-width: 20rem !important;\n  word-wrap: break-word;\n  align-items: center;\n  justify-content: center;\n  align-content: normal !important;\n\n  @media screen and (max-width: ${BreakPoints.medium}) {\n    align-items: center;\n    justify-content: center;\n    align-content: normal !important;\n    background: ${({ theme: { colors } }) => colors.white};\n  }\n\n  @media screen and (max-width: ${BreakPoints.small}) {\n    align-items: center !important;\n    justify-content: center !important;\n    background: transparent;\n    box-shadow: none;\n  }\n`;\n\n/**\n * Styles for Loader Text.\n */\nexport const LoaderText = styled(Text)`\n  margin-top: 1.5rem;\n`;\n\n/**\n * Styles for optional Helper Text.\n */\nexport const HelperText = styled(Text)`\n  ${({ text }) =>\n    text &&\n    `\n    text-align: center;\n    margin-top: 1.5rem;\n    padding: 0 0.9rem;\n    width: 300px;\n  `}\n`;\n","import React from 'react';\nimport { useTheme } from 'styled-components';\nimport { Image, GenericModal } from 'components/primitive';\nimport { LoaderComponentProps } from './notice-loader.component.props';\nimport { Spinner, LoaderText, HelperText, NoticeLoaderContainer } from './notice-loader.component.styles';\n\nexport const NoticeLoader: React.FC<LoaderComponentProps> = (props) => {\n  const { label, spinner, helperText, IconName } = props;\n  const { images } = useTheme();\n  const url = IconName ? images[IconName] : images.lockLoader;\n\n  return (\n    <GenericModal show={true} hide noClose>\n      <NoticeLoaderContainer>\n        {spinner ? <Spinner /> : <Image src={url} width={7} />}\n        <LoaderText variant='small' {...label} />\n        <HelperText variant='small' {...helperText} />\n      </NoticeLoaderContainer>\n    </GenericModal>\n  );\n};\n","import styled from 'styled-components';\nimport { Card, Text } from 'components/primitive';\nimport { BreakPoints } from 'utils';\n\n/**\n * Styles for the Create Safe Card.\n */\nexport const CardContainer = styled(Card)`\n  height: 24.3rem !important;\n  max-width: 33rem !important;\n  margin: 1.5rem !important;\n  border-radius: 0.5rem;\n  box-shadow: ${({ theme: { colors } }) => colors.shadow};\n  background-color: ${({ theme: { colors } }) => colors.white};\n  @media screen and (max-width: ${BreakPoints.small}) {\n    height: 24.3rem !important;\n    max-width: 33rem !important;\n    margin: 1.5rem 0 1.5rem !important;\n  }\n`;\n\n/**\n * Styles for text inside the cards.\n */\nexport const Label = styled(Text)`\n  margin-top: 2rem;\n`;\n","import styled from 'styled-components';\n\n/**\n * Styles for Stats Container.\n */\nexport const StatsContainer = styled.div`\n  display: flex;\n  gap: 1.6rem;\n  width: fit-content;\n`;\n\n/**\n * Styles for CountContainer.\n */\nexport const CountContainer = styled.span`\n  display: inline-flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n","import { Avatar, Text } from 'components/primitive';\nimport { StatsComponentProps } from './stats-card.component.props';\nimport { StatsContainer, CountContainer } from './stats-card.component.styles';\n\nexport const StatsCard: React.FC<StatsComponentProps> = (props) => {\n  const { heading, count, iconName } = props;\n\n  return (\n    <StatsContainer>\n      <Avatar size='large' flat {...iconName} />\n      <CountContainer>\n        <Text variant='small' color='textLight' {...heading} />\n        <Text variant='contentHeader' {...count} />\n      </CountContainer>\n    </StatsContainer>\n  );\n};\n","import styled from 'styled-components';\n\n// Todo - Fix the border latter\nexport const ToggleSwitchContainer = styled.div`\n  .label {\n    display: block;\n    overflow: hidden;\n    cursor: pointer;\n    border-radius: 2rem;\n  }\n  .inner {\n    display: block;\n    width: 200%;\n    margin-left: -100%;\n    transition: margin 0.3s ease-in 0s;\n  }\n  .inner:before,\n  .inner:after {\n    float: left;\n    width: 3.4rem;\n    height: 1.4rem;\n    padding: 0;\n    line-height: 3.6rem;\n    background: ${({ theme: { colors } }) => colors.toggleSwitchBackground};\n    opacity: 0.24;\n    font-weight: bold;\n    box-sizing: border-box;\n  }\n  .inner:before {\n    content: '';\n    color: #fff;\n  }\n  .inner:after {\n    content: '';\n    background: ${({ theme: { colors } }) => colors.toggleSwitchBackground};\n    opacity: 0.24;\n    border-left: 50%;\n  }\n  .switch {\n    display: block;\n    width: 2rem;\n    height: 2rem;\n    margin: 0;\n    background: ${({ theme: { colors } }) => colors.toggleSwitchBackground};\n    position: absolute;\n    top: -0.3rem;\n    bottom: 0;\n    right: 1.5rem;\n    border-radius: 50%;\n    transition: all 0.3s ease-in 0s;\n  }\n`;\n\nexport const Switch = styled.div`\n  position: relative;\n  width: 3.7rem;\n  top: 0.8rem;\n`;\n\nexport const StyledInput = styled.input`\n  display: none;\n  &:checked + .label .inner {\n    margin-left: 0;\n  }\n  &:checked + .label .switch {\n    right: 0;\n  }\n`;\n","import { ToggleSwitchComponentProps } from './toggle-switch.component.props';\nimport { ToggleSwitchContainer, StyledInput, Switch } from './toggle-switch.component.styles';\n\nexport const ToggleSwitch: React.FC<ToggleSwitchComponentProps> = (props) => {\n  const { toggleID, checked, onChange } = props;\n\n  return (\n    <ToggleSwitchContainer>\n      <Switch>\n        <StyledInput type='checkbox' id={toggleID} checked={checked} onChange={onChange} />\n        <label className='label' htmlFor={toggleID}>\n          <span className='inner' />\n          <span className='switch' />\n        </label>\n      </Switch>\n    </ToggleSwitchContainer>\n  );\n};\n","import styled from 'styled-components';\nimport Modal, { BaseModalBackground } from 'styled-react-modal';\nimport { Button } from 'components/primitive';\n\nexport const FadingBackground = styled(BaseModalBackground)`\n  transition: all 0.3s ease-in-out;\n`;\n\nexport const ModalButton = styled(Button)`\n  height: 4rem !important;\n  width: 2rem !important;\n  margin: 0.5rem !important;\n  cursor: pointer;\n`;\n\nexport const StyledModal = Modal.styled`\n  max-width: 60rem;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  padding: 1rem;\n  transition : all 0.3s ease-in-out;\n  position: relative;\n  border-radius: 0.5rem;\n`;\n\nexport const CloseModal = styled.h1`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  font-size: 2rem;\n  font-weight: bold;\n  color: ${(props) => props.theme.colors.textLight};\n  z-index: 999;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import { useState } from 'react';\nimport { ModalProvider } from 'styled-react-modal';\nimport { GenericModalComponentProps } from './generic-modal.component.props';\nimport { Box, Text } from '..';\nimport { FadingBackground, StyledModal, CloseModal, ModalButton } from './generic-modal.component.style';\n\nexport const GenericModal: React.FunctionComponent<GenericModalComponentProps> = (\n  props: GenericModalComponentProps\n) => {\n  const { show, onClose, title, onSubmit, onCancel, children, hide, noClose } = props;\n\n  const [isOpen, setIsOpen] = useState(show);\n  const [opacity, setOpacity] = useState(0);\n\n  function toggleModal(e: any) {\n    setOpacity(0);\n    setIsOpen(!isOpen);\n    if (onClose) onClose();\n  }\n\n  const handleClose = () => {\n    if (onClose) onClose();\n  };\n\n  function afterOpen() {\n    setTimeout(() => {\n      setOpacity(1);\n    }, 100);\n  }\n\n  function beforeClose() {\n    return new Promise((resolve) => {\n      setOpacity(0);\n      setTimeout(resolve, 300);\n    });\n  }\n\n  return (\n    <ModalProvider backgroundComponent={FadingBackground}>\n      <StyledModal\n        isOpen={isOpen}\n        afterOpen={afterOpen}\n        beforeClose={beforeClose}\n        onBackgroundClick={noClose ? () => {} : toggleModal}\n        onEscapeKeydown={noClose ? () => {} : toggleModal}\n        backgroundProps={{ opacity }}\n      >\n        {!hide && <CloseModal onClick={toggleModal}>X</CloseModal>}\n        {!!title && (\n          <Box vCenter hCenter paddingTop={2}>\n            <Text bold {...title} />\n          </Box>\n        )}\n        <Box paddingVertical={2}>{children}</Box>\n        {!hide && (\n          <Box row rightAlign paddingTop={2}>\n            {!onCancel && (\n              <ModalButton label={{ text: 'Close', color: 'black' }} variant='ghost' onClick={handleClose} />\n            )}\n            {!onSubmit && <ModalButton label={{ text: 'Continue' }} variant='small' onClick={handleClose} />}\n          </Box>\n        )}\n      </StyledModal>\n    </ModalProvider>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/arrow_down.e717b966.svg\";","export default __webpack_public_path__ + \"static/media/arrow_left.e2de47b5.svg\";","export default __webpack_public_path__ + \"static/media/arrow_right.0d1cd8c2.svg\";","export default __webpack_public_path__ + \"static/media/hamburger_menu.5c353009.svg\";","export default __webpack_public_path__ + \"static/media/add.fdba0b6a.svg\";","export default __webpack_public_path__ + \"static/media/arrow_up.7bf4b2db.svg\";","export default __webpack_public_path__ + \"static/media/bitcoin.188dff40.svg\";","export default __webpack_public_path__ + \"static/media/calender.16e095fb.svg\";","export default __webpack_public_path__ + \"static/media/check.d0a933c9.svg\";","export default __webpack_public_path__ + \"static/media/check_active.7de8a0dc.svg\";","export default __webpack_public_path__ + \"static/media/claims.50ac3144.svg\";","export default __webpack_public_path__ + \"static/media/close.75269e12.svg\";","export default __webpack_public_path__ + \"static/media/copy.f6ac61d8.svg\";","export default __webpack_public_path__ + \"static/media/darkMode.2dbef30d.svg\";","export default __webpack_public_path__ + \"static/media/dashboard.4bb11642.svg\";","export default __webpack_public_path__ + \"static/media/dayMode.1c1e19f4.svg\";","export default __webpack_public_path__ + \"static/media/discord.0aae010a.svg\";","export default __webpack_public_path__ + \"static/media/discord-full.41101eea.svg\";","export default __webpack_public_path__ + \"static/media/edit.0b6bcf51.svg\";","export default __webpack_public_path__ + \"static/media/external_link.1f3c7b99.svg\";","export default __webpack_public_path__ + \"static/media/feedback.d50fce8c.svg\";","export default __webpack_public_path__ + \"static/media/github.2f809bc4.svg\";","export default __webpack_public_path__ + \"static/media/google.0d6e9a6e.svg\";","export default __webpack_public_path__ + \"static/media/guarding.187efde5.svg\";","export default __webpack_public_path__ + \"static/media/heart.a6581789.svg\";","export default __webpack_public_path__ + \"static/media/info.fa150b9f.svg\";","export default __webpack_public_path__ + \"static/media/info_active.806642c2.svg\";","export default __webpack_public_path__ + \"static/media/inherit.b0500350.svg\";","export default __webpack_public_path__ + \"static/media/lock.d1f9a809.svg\";","export default __webpack_public_path__ + \"static/media/locked.432fefc9.svg\";","export default __webpack_public_path__ + \"static/media/pending.274f7bfd.svg\";","export default __webpack_public_path__ + \"static/media/metamask.07e5cede.svg\";","export default __webpack_public_path__ + \"static/media/money.656c7c4d.svg\";","export default __webpack_public_path__ + \"static/media/notification.0ae41f4f.svg\";","export default __webpack_public_path__ + \"static/media/demo.55322404.png\";","export default __webpack_public_path__ + \"static/media/profile.3e37fb13.svg\";","export default __webpack_public_path__ + \"static/media/safes.68911995.svg\";","export default __webpack_public_path__ + \"static/media/twitter.7052a9e4.svg\";","export default __webpack_public_path__ + \"static/media/upload.91a2e6ab.svg\";","export default __webpack_public_path__ + \"static/media/user.2ca16d1d.svg\";","export default __webpack_public_path__ + \"static/media/avatar.1c5a7d88.svg\";","export default __webpack_public_path__ + \"static/media/error.7401f7c1.svg\";","export default __webpack_public_path__ + \"static/media/checkSuccess.f4d180b8.svg\";","export default __webpack_public_path__ + \"static/media/active.3b2613c1.svg\";","export default __webpack_public_path__ + \"static/media/shield.390c584a.svg\";","export default __webpack_public_path__ + \"static/media/checked.e83725e2.svg\";","export default __webpack_public_path__ + \"static/media/success-alert.32353ff5.svg\";","export default __webpack_public_path__ + \"static/media/warning-alert.d5b86ce0.svg\";","export default __webpack_public_path__ + \"static/media/info-alert.c8828b28.svg\";","export default __webpack_public_path__ + \"static/media/error-alert.2b4b4270.svg\";","export default __webpack_public_path__ + \"static/media/safient_avatar.ba75900c.png\";","export default __webpack_public_path__ + \"static/media/login-google.c32a763f.svg\";","export default __webpack_public_path__ + \"static/media/login-github.4bd9b076.svg\";","export default __webpack_public_path__ + \"static/media/login-metamask.b4fabdba.svg\";","export default __webpack_public_path__ + \"static/media/lockLoader.d43942d0.gif\";","export default __webpack_public_path__ + \"static/media/logo.8a275223.svg\";","export default __webpack_public_path__ + \"static/media/safientWallet.b3501982.svg\";","export default __webpack_public_path__ + \"static/media/landing-page.9df227c0.svg\";","import React from 'react';\nimport { Color } from '../../../themes';\n\nexport enum Variant {\n  /**\n   * Large sized dark text, usually a large heading\n   */\n  title = 'title',\n\n  /**\n   * A grayish  medium sized bold header\n   */\n  contentHeader = 'contentHeader',\n\n  /**\n   * Common medium sized text used in description and other contents.\n   */\n  content = 'content',\n\n  /**\n   * Renders a small gray text\n   */\n  small = 'small',\n}\n\n/**\n * Font Sizes- base size is 10px - so 1rem=10px\n */\nexport enum FontSize {\n  tiny = 1.2,\n  small = 1.6,\n  medium = 2.0,\n  large = 2.6,\n}\n\n/**\n * Font weights\n */\nexport enum FontWeight {\n  semiBold = 500,\n  bold = 600,\n}\n\n/**\n * Text Alignment properties\n */\nexport enum TextAlign {\n  left,\n  center,\n  right,\n}\n\nexport interface TextComponentProps extends React.HTMLAttributes<HTMLHeadingElement> {\n  /**\n   * Bolder text\n   */\n  bold?: boolean;\n\n  /**\n   * Less bolder text\n   */\n  bold500?: boolean;\n\n  /**\n   * More bolder text\n   */\n  bold600?: boolean;\n\n  /**\n   * Sets font weight to normal\n   */\n  noBold?: boolean;\n\n  /**\n   * Children components.\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Text color.\n   */\n\n  color?: Color;\n\n  /**\n   * Center align text\n   */\n  center?: boolean;\n\n  /**\n   * left align text\n   */\n\n  left?: boolean;\n\n  /**\n   * right align text\n   */\n\n  right?: boolean;\n\n  /**\n   * capitalize  text\n   */\n  capitalize?: boolean;\n  /**\n   * Grays out the text to make it look disabled and restricts onPress operation\n   */\n  disabled?: boolean;\n\n  /**\n   * Line height.\n   */\n  lineHeight?: number;\n\n  /**\n   * Text which is looked up via i18n.\n   */\n  tx?: string;\n\n  /**\n   * Optional options to pass to i18n. Useful for interpolation\n   * as well as explicitly setting locale or translation fallbacks.\n   */\n  txOptions?: object;\n\n  /**\n   * The text to display if not using `tx` or nested components.\n   */\n  text?: string;\n\n  /**\n   * When a text is displayed in a row next to an item, this prop\n   * can be used to add some space before text\n   */\n  paddingLeft?: number;\n\n  /**\n   * When a text is displayed in a row next to an item, this prop\n   * can be used to add some space after text\n   */\n  paddingRight?: number;\n\n  /**\n   * One of the different types of text presets.\n   */\n  preset?: string;\n\n  /**\n   * Font size from the predefined set of sizes or an arbitrary number\n   */\n  size?: keyof typeof FontSize | number;\n\n  /**\n   * Transform text to UPPER CASE\n   */\n  upperCase?: boolean;\n\n  /**\n   * Transform text to lower case\n   */\n  lowerCase?: boolean;\n\n  /**\n   * determines the differnt text variants.\n   */\n\n  variant?: keyof typeof Variant;\n\n  /**\n   * sets the font weight\n   */\n\n  weight?: keyof typeof FontWeight;\n}\n","import styled from 'styled-components';\nimport { FontSize, FontWeight, TextComponentProps } from './text.component.props';\n\n/**\n * Base style for text component that can be extended.\n */\nconst Base = styled.h2<TextComponentProps>`\n  font-size: ${FontSize.small}rem;\n  font-weight: ${FontWeight.bold};\n  color: ${({ theme }) => theme.colors.textLight};\n  line-height: 1.4;\n`;\n\n/**\n * Large sized dark text, usually a large heading.\n */\nconst Title = styled(Base)<TextComponentProps>`\n  font-size: ${FontSize.large}rem;\n  color: ${({ theme }) => theme.colors.textDark};\n`;\n\n/**\n * A grayish  medium sized bold header.\n */\nconst ContentHeader = styled(Base)<TextComponentProps>`\n  font-size: ${FontSize.medium}rem;\n`;\n\n/**\n * Common medium sized text used in description and other contents.\n */\nconst Content = styled.p<TextComponentProps>`\n  color: ${({ theme }) => theme.colors.textLight};\n  font-weight: ${FontWeight.semiBold};\n  font-size: ${FontSize.small}rem;\n  line-height: 1.4;\n`;\n\n/**\n * Renders a small gray text.\n */\nconst Small = styled(Base)<TextComponentProps>`\n  font-size: ${FontSize.small}rem;\n  font-weight: ${FontWeight.semiBold};\n`;\n\nexport { Base, Title, ContentHeader, Content, Small };\n","import _ from 'lodash';\nimport i18n from 'i18n-js';\n\ni18n.translations['en'] = require('./locales/en.json');\n\nconst _translate = _.memoize(\n  (key, config) => i18n.t(key, config),\n  (key, config) => (config ? key + JSON.stringify(config) : key)\n);\n\nexport const translate = (key: string, config?: object) => {\n  return _translate(key, config || {});\n};\n","import React from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { Title, ContentHeader, Content, Small, Base } from './text.component.styles';\nimport { TextComponentProps, Variant, FontSize } from './text.component.props';\nimport { translate } from '../../../i18n/translate';\nimport { IStyledTheme } from '../../../themes/styled-components';\n\nexport const Text: React.FunctionComponent<TextComponentProps> = withTheme(\n  (props: TextComponentProps & IStyledTheme) => {\n    const { text, tx, txOptions, variant, children, ...rest } = props;\n    const i18nText = tx && translate(tx, txOptions);\n    const content = i18nText || text || children;\n\n    const getVariant = (variant: Variant = Variant.content) => {\n      let TextComponent;\n      switch (variant) {\n        case Variant.title:\n          TextComponent = Title;\n          break;\n        case Variant.contentHeader:\n          TextComponent = ContentHeader;\n          break;\n        case Variant.content:\n          TextComponent = Content;\n          break;\n        case Variant.small:\n          TextComponent = Small;\n          break;\n        default:\n          TextComponent = Base;\n      }\n      return TextComponent;\n    };\n\n    const StyledText = getVariant(variant ? Variant[variant] : undefined);\n    const Typography = styled(StyledText)<TextComponentProps>`\n      /* custom styles goes here */\n      text-transform: ${({ upperCase }) => upperCase && `uppercase`};\n      text-transform: ${({ lowerCase }) => lowerCase && `lowercase`};\n      text-transform: ${({ capitalize }) => capitalize && `lowercase`};\n      text-align: ${({ center }) => center && 'center'};\n      text-align: ${({ left }) => left && `left`};\n      text-align: ${({ right }) => right && `right`};\n      line-height: ${({ lineHeight }) => lineHeight && `${lineHeight}em`};\n      padding-left: ${({ paddingLeft }) => paddingLeft && ` ${paddingLeft}rem`};\n      padding-right: ${({ paddingRight }) => paddingRight && ` ${paddingRight}rem`};\n      font-weight: ${({ noBold }) => noBold && `normal`};\n      font-weight: ${({ bold500 }) => bold500 && `500`};\n      font-weight: ${({ bold600 }) => bold600 && `600`};\n      font-size: ${({ size }) => size && `${FontSize[size]} rem`};\n      font-size: ${({ size }) => size && `${size}rem`};\n      color: ${({ color, theme: { colors } }) => color && colors[color]};\n    `;\n\n    return <Typography {...rest}>{content}</Typography>;\n  }\n);\n","import styled from 'styled-components';\nimport { Box } from 'components/primitive';\n\n/**\n * Styling for AppContainer.\n */\nexport const AppContainer = styled.div`\n  height: 100% !important;\n  display: flex;\n  flex-direction: row;\n`;\n\n/**\n * styling for main ContentWrapper.\n */\nexport const ContentWrapper = styled(Box)`\n  width: 100vw !important;\n`;\n\n/**\n * styling for main container.\n */\nexport const Content = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  flex-direction: row;\n  flex: 0;\n  margin: 0 auto;\n  background-color: ${({ theme: { colors } }) => colors.applicationBackground};\n  width: inherit;\n`;\n","import { TopBar } from 'components/primitive';\nimport { AppLayoutProps } from './app-layout.component.props';\nimport { AppContainer, Content, ContentWrapper } from './app-layout.component.styles';\n\nexport const AppLayout: React.FC<AppLayoutProps> = ({ children }) => {\n  return (\n    <AppContainer>\n      <ContentWrapper>\n        <TopBar />\n        <Content>{children}</Content>\n      </ContentWrapper>\n    </AppContainer>\n  );\n};\n","export enum WalletStatus {\n  active = 'active',\n  locked = 'locked',\n  pending = 'pending',\n}\n\nexport enum UserRole {\n  creator = 'creator',\n  beneficiary = 'beneficiary',\n  guardian = 'guardian',\n}\n\nexport enum IconName {\n  locked = 'locked',\n  pending = 'warningAlert',\n  active = 'successAlert',\n  avatar = 'avatar',\n}\n\nexport enum Color {\n  pending = 'warningLight',\n  locked = 'errorLight',\n  active = 'successLight',\n}\n\n/**\n * Props supported by SafeCard component.\n */\nexport interface WalletCardProps {\n  walletName: string;\n  roleName: keyof typeof UserRole;\n  status: keyof typeof WalletStatus;\n  shimmer?: boolean;\n}\n","import { Box, Card, Text } from 'components/primitive';\nimport styled from 'styled-components';\nimport { BreakPoints } from '../../../../utils';\n\nexport const StyledWalletCard = styled(Card)`\n  flex: 0 0 auto !important;\n  height: 24.3rem !important;\n  max-width: 33rem !important;\n  margin: 1.5rem !important;\n  border-radius: 0.5rem;\n  box-shadow: ${({ theme: { colors } }) => colors.shadow};\n  background-color: ${({ theme: { colors } }) => colors.white};\n  @media screen and (max-width: ${BreakPoints.small}) {\n    flex: 0 0 auto !important;\n    max-height: 24.3rem !important;\n    max-width: 33rem !important;\n    margin: 1.5rem 0 1.5rem !important;\n  }\n`;\n/**\n * Styles for text inside the cards.\n */\n export const WalletText = styled(Text)`\n margin-top: 2rem;\n`;\n\nexport const MetaInfo = styled(Box)`\n  position: absolute;\n  bottom: 0;\n  align-content: space-around;\n  flex: 0 0 !important;\n  width: 100%;\n  height: 7.2rem;\n`;\n","import { WalletStatus, IconName, UserRole, Color } from './wallet-card.component.props';\n\n/**\n *\n * @param variant\n * @returns style based on Variant passed by user.\n */\n\nexport const getStatusInfo = (status: keyof typeof WalletStatus = WalletStatus.active) => {\n  let text, iconName, color;\n\n  switch (status) {\n    case WalletStatus.active:\n      text = 'Active';\n      color = Color.active;\n      iconName = IconName.active;\n      break;\n\n    case WalletStatus.locked:\n      text = 'Locked';\n      color = Color.locked;\n      iconName = IconName.locked;\n      break;\n\n    case WalletStatus.pending:\n      text = 'Pending';\n      color = Color.pending;\n      iconName = IconName.pending;\n      break;\n\n    default:\n      text = 'Active';\n      color = Color.active;\n      iconName = IconName.active;\n  }\n\n  return { text, iconName, color };\n};\n\nexport const getUserInfo = (status: keyof typeof UserRole = UserRole.creator) => {\n  let text, iconName;\n\n  switch (status) {\n    case UserRole.creator:\n      text = 'Creator';\n      iconName = IconName.avatar;\n      break;\n\n    case UserRole.beneficiary:\n      text = 'Beneficiary';\n      iconName = IconName.avatar;\n      break;\n\n    case UserRole.guardian:\n      text = 'Guardian';\n      iconName = IconName.avatar;\n      break;\n\n    default:\n      text = 'Creator';\n      iconName = IconName.avatar;\n  }\n\n  return { text, iconName };\n};\n","import { AccountStoreImpl, AppStoreImpl, SafeStoreImpl} from '../index';\nimport { IStore } from '../store';\nimport { action, makeObservable, observable } from 'mobx';\n\nexport enum StoreType {\n  ACCOUNT = 'accountStore',\n  APP = 'appStore',\n  SAFE = 'safeStore'\n}\n\nexport interface Stores extends IStore {\n  /**\n   * Contains safe specific details\n   */\n  safeStore: SafeStoreImpl;\n\n  /**\n   * contains app related details\n   */\n  appStore: AppStoreImpl;\n\n  /**\n   * Contains account specific details such as jwt, profile etc.\n   */\n   accountStore: AccountStoreImpl;\n}\n\nexport class StoresImpl implements Stores {\n  accountStore: AccountStoreImpl;\n  appStore: AppStoreImpl;\n  safeStore: SafeStoreImpl;\n\n  constructor() {\n    this.accountStore = new AccountStoreImpl();\n    this.appStore = new AppStoreImpl();\n    this.safeStore = new SafeStoreImpl();\n\n    makeObservable<StoresImpl, any>(this, {\n      accountStore: observable,\n      appStore: observable,\n      safeStore: observable,\n      resetStore: action,\n    });\n  }\n\n  resetStore = (): void => {\n    // All the stores must be reset here\n    this.accountStore.resetStore();\n    this.appStore.resetStore();\n    this.safeStore.resetStore();\n  };\n}\n\nexport const stores: Stores = new StoresImpl();\n","import styled, { keyframes } from 'styled-components';\nimport { Box } from 'components/primitive';\nimport { StyledWalletCard, MetaInfo } from './wallet-card.component.styles';\n\n/**\n * Keyframe animation for shimmer effect.\n */\n\nexport const placeholderShimmer = keyframes`\n   0% {\n    background-position: -46.8rem 0;\n  }\n\n  100% {\n    background-position: 46.8rem 0;\n  }\n\n`;\n\n/**\n * Base style which can be inherited.\n */\nexport const BaseStyle = styled.div`\n  background: ${({ theme: { colors } }) => colors.shimmer};\n  background-image: linear-gradient(\n    to right,\n    ${({ theme: { colors } }) => colors.shimmer} 0%,\n    #edeef1 20%,\n    ${({ theme: { colors } }) => colors.shimmer} 40%,\n    ${({ theme: { colors } }) => colors.shimmer} 100%\n  );\n  background-repeat: no-repeat;\n  -webkit-animation-duration: 1s;\n  -webkit-animation-fill-mode: forwards;\n  -webkit-animation-iteration-count: infinite;\n  -webkit-animation-name: ${placeholderShimmer};\n  -webkit-animation-timing-function: linear;\n`;\n\n/**\n * Styles for line.\n */\nexport const Line = styled(BaseStyle)`\n  border-radius: 0.4rem;\n  width: 10rem;\n  height: 2rem;\n`;\n\n/**\n * Styles for Circle.\n */\nexport const Circle = styled(BaseStyle)`\n  border-radius: 5rem;\n  width: 5.5rem;\n  height: 5.5rem;\n`;\n\nexport const WalletCardShimmer = () => {\n  return (\n    <StyledWalletCard hCenter vCenter>\n      <Box flex={0} hCenter vCenter marginTop={-5}>\n        <Circle />\n      </Box>\n      <Box flex={0} hCenter vCenter marginTop={1}>\n        <Line />\n      </Box>\n      <MetaInfo row marginTop={3} color='bottomAccent' padding={2.2} align={'center'}>\n        <Box align={'center'} padding={1} row>\n          <Line />\n        </Box>\n        <Box align={'center'} paddingLeft={6} row>\n          <Line />\n        </Box>\n      </MetaInfo>\n    </StyledWalletCard>\n  );\n};\n","import { Box, Text, IconSvg } from 'components/primitive';\nimport { MetaInfo, StyledWalletCard, WalletText } from './wallet-card.component.styles';\nimport { WalletCardProps } from './wallet-card.component.props';\nimport { Link } from 'react-router-dom';\nimport { RoutePath } from 'navigation/route-path';\nimport { getStatusInfo, getUserInfo } from './wallet-card.component.utils';\nimport { WalletCardShimmer } from './wallet-card-shimmer.component';\n\nexport const WalletCard: React.FC<WalletCardProps> = (props) => {\n  const { walletName, roleName, status, shimmer } = props;\n\n  return (\n    <>\n      {shimmer ? (\n        <WalletCardShimmer />\n      ) : (\n        <>\n          <StyledWalletCard hCenter vCenter>\n            <Link to={RoutePath.createWallet}>\n              <IconSvg name='safientWallet' size='large' />\n            </Link>\n            <WalletText variant='content' text={walletName} />\n            <MetaInfo row marginTop={2} color='bottomAccent' padding={2.2} align={'center'}>\n              <Box align={'center'} padding={1} row>\n                <IconSvg name={getUserInfo(roleName).iconName} size='small' />\n                <Text paddingLeft={1} variant='small' text={getUserInfo(roleName).text} />\n              </Box>\n              <Box align={'center'} paddingLeft={6} row>\n                <IconSvg name={getStatusInfo(status).iconName} size='medium' />\n                <Text\n                  paddingLeft={1}\n                  variant='small'\n                  text={getStatusInfo(status).text}\n                  color={getStatusInfo(status).color}\n                />\n              </Box>\n            </MetaInfo>\n          </StyledWalletCard>\n        </>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Box, Card, Text } from '../../components/primitive';\nimport { BreakPoints } from '../../utils';\n\n/**\n * Main container of the home screen.\n */\nexport const HomeScreenContainer = styled(Box)`\n  height: 95%;\n  margin: 3rem !important;\n  @media screen and (max-width: ${BreakPoints.small}) {\n    height: 80vh;\n    width: 100vw;\n  }\n`;\n\n/**\n * Styles for Title Text.\n */\nexport const Title = styled(Text)`\n  margin-left: 38rem;\n  @media screen and (max-width: ${BreakPoints.small}) {\n    margin-left: 0.1rem;\n  }\n`;\n\n/**\n * Styles for text inside the cards.\n */\nexport const SafeText = styled(Text)`\n  margin-top: 2rem;\n`;\n\n/**\n * Container that holds all Cards.\n */\nexport const CardsContainer = styled(Box)`\n  flex-wrap: wrap;\n  flex: 2;\n  width: 80rem;\n  margin: 0 auto;\n  background-color: ${({ theme: { colors } }) => colors.applicationBackground};\n\n  @media screen and (max-width: ${BreakPoints.medium}) {\n    justify-content: flex-start;\n    align-items: center;\n    width: inherit !important;\n  }\n`;\n\n/**\n * Styles for the Create Safe Card.\n */\nexport const SafeCard = styled(Card)`\n  flex: 0 0 auto !important;\n  height: 24.3rem !important;\n  max-width: 33rem !important;\n  margin: 1.5rem !important;\n  border-radius: 0.5rem;\n  box-shadow: ${({ theme: { colors } }) => colors.shadow};\n  background-color: ${({ theme: { colors } }) => colors.white};\n  @media screen and (max-width: ${BreakPoints.small}) {\n    flex: 0 0 auto !important;\n    max-height: 24.3rem !important;\n    max-width: 33rem !important;\n    margin: 1.5rem 0 1.5rem !important;\n  }\n`;\n","import {action, computed, makeObservable, observable} from 'mobx'\nimport {Store} from './store'\n\nexport class StoreImpl implements Store {\n  protected _fetching: boolean\n  protected _error: string\n  protected _code: number\n\n  constructor() {\n    this._fetching = false\n    this._error = ''\n    this._code = 0\n\n    makeObservable<StoreImpl, any>(this, {\n      _fetching: observable,\n      _error: observable,\n      _code: observable,\n      fetching: computed,\n      error: computed,\n      errorCode: computed,\n      setFetching: action,\n      setError: action,\n    })\n  }\n\n  get fetching() {\n    return this._fetching\n  }\n\n  get error() {\n    return this._error\n  }\n\n  get errorCode() {\n    return this._code\n  }\n\n  public setFetching(flag: boolean) {\n    this._fetching = flag\n\n    if (flag) {\n      this._error = ''\n    }\n  }\n\n  public setError(message?: string, code?: number) {\n    this._error = message || ''\n    this._code = code || 0\n    this.setFetching(false)\n  }\n\n}\n","import { action, computed, makeObservable, observable } from 'mobx';\nimport Web3Modal from 'web3modal';\nimport { AccountStore } from './account.store';\nimport { StoreImpl } from '../store/store.impl';\nimport { User } from '../../models';\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers';\nimport { formatEther } from '@ethersproject/units';\nimport { SafientCore, Types, Enums } from '@safient/core';\n\nconst UserNotFoundCode = 10;\n\nexport class AccountStoreImpl extends StoreImpl implements AccountStore {\n\n  private web3Provider?: Web3Provider;\n  private signer?: JsonRpcSigner;\n  chainId?: number;\n  address!: string;\n  balance?: string;\n  safient!: SafientCore;\n  _web3User!: Types.User;\n\n\n  constructor() {\n    super();\n    this.loadAccount();\n\n    makeObservable<AccountStoreImpl, any>(this, {\n      web3Provider: observable,\n      signer: observable,\n      chainId: observable,\n      address: observable,\n      balance: observable,\n      _web3User: observable,\n      userExists: computed,\n      userSignedIn: computed,\n      resetStore: action,\n      loadAccount: action,\n      setWeb3User: action,\n    });\n  }\n\n  async resetStore() {\n  }\n\n  async loadAccount(): Promise<void> {\n\n    const web3Modal = new Web3Modal({\n      cacheProvider: true,\n      theme: 'light',\n    });\n    const injectedProvider = await web3Modal.connect();\n    this.web3Provider = new Web3Provider(injectedProvider);\n    const network = await this.web3Provider.getNetwork();\n    this.chainId = await network.chainId;\n    this.signer = await this.web3Provider.getSigner();\n    this.address = await this.signer.getAddress();\n    const balance = await this.signer.getBalance();\n    this.balance = formatEther(balance);\n    this.safient = new SafientCore(\n      this.signer,\n      Enums.NetworkType.testnet,\n      Enums.DatabaseType.threadDB,\n      'bjngsmak24m6e5p2ijtcedws2tq',\n      'bn3h6ozdpkmh7tgx3jh5el55cgfaevwxh7mcnnfi'\n    );\n  }\n\n  get web3User(): Types.User {\n    return this._web3User;\n  }\n\n  setWeb3User(user: Types.User) {\n      this._web3User = user;\n   }\n\n  get userSignedIn(): boolean {\n    return !!this._web3User;\n  }\n\n\n  get userExists(): boolean {\n    return this.errorCode !== UserNotFoundCode;\n  }\n}\n","import { action, makeObservable, observable } from 'mobx';\nimport { SafeStore } from './safe.store';\nimport { StoreImpl } from '../store/store.impl';\nimport { Types } from '@safient/core';\nimport { WalletSecret, WalletInfo } from '../../utils/Wallet'\n\n\nexport class SafeStoreImpl extends StoreImpl implements SafeStore {\n\n\n  _safe?: Types.Safe;\n  _walletSecret?: WalletSecret;\n  _walletInfo?: WalletInfo;\n\n\n  constructor() {\n    super();\n\n    makeObservable<SafeStoreImpl, any>(this, {\n      _safe: observable,\n      _walletInfo: observable,\n      _walletSecret: observable,\n      setWallet: action,\n    });\n  }\n\n  get safe(): Types.Safe|undefined {\n    return this._safe;\n  }\n\n  get walletInfo(): WalletInfo|undefined {\n    return this._walletInfo;\n  }\n\n  get walletSecret(): WalletSecret|undefined {\n    return this._walletSecret;\n  }\n\n  setSafe(safe: Types.Safe) {\n    this._safe = safe;\n }\n\n  setWallet(info: WalletInfo, secret?: WalletSecret) {\n\n    this._walletInfo = info;\n    this._walletSecret = secret;\n    \n   }\n\n   async resetStore() {\n  }\n\n}\n","import { action, makeObservable } from 'mobx';\nimport { AppStore } from './app.store';\nimport { StoreImpl } from '../store/store.impl';\n\nexport class AppStoreImpl extends StoreImpl implements AppStore {\n  // Enable this to init dummy data from cache\n  static USE_FIXTURES = false;\n\n  constructor() {\n    super();\n    this.resetStore();\n\n    if (AppStoreImpl.USE_FIXTURES && process.env.NODE_ENV !== 'production') {\n      this.resetStoreWithFixtures();\n    }\n\n    makeObservable<AppStoreImpl, any>(this, {\n      resetStore: action,\n      resetStoreWithFixtures: action,\n    });\n  }\n\n  resetStore() {\n    // reset\n  }\n\n  private resetStoreWithFixtures() {\n    // reset with fixtures\n  }\n}\n"," \n const INFURA_API_KEY = 'c0201f3cd3894e30b62af4bb542b5779'\n const ETHERSCAN_API_KEY = 'H8IGZCCS8XCJYSXIA3GUUKW6CDECYYMNPG'\n\n enum Network  {\n     localhost = 'localhost',\n     mainnet = 'mainnet',\n     kovan = 'kovan',\n     polygontestnet = 'polygontestnet',\n     polygon = 'polygon'\n\n }\n\n const networks = {\n    localhost: {\n      chainId: 31337,\n      url: 'http://localhost:8545',\n      blockExplorer: '',\n      api: ''\n    },\n    mainnet: {\n      chainId: 1,\n      url: `https://mainnet.infura.io/v3/${INFURA_API_KEY}`,\n      blockExplorer: 'https://etherscan.io',\n      api: `https://api.etherscan.io/api?apikey=${ETHERSCAN_API_KEY}`,\n    },\n    kovan: {\n      chainId: 42,  \n      url: `https://kovan.infura.io/v3/${INFURA_API_KEY}`,\n      blockExplorer: 'https://kovan.etherscan.io',\n      api: `https://api-kovan.etherscan.io/api?apikey=${ETHERSCAN_API_KEY}`,\n\n    },\n    polygontestnet: {\n        chainId: 80001,\n      url: 'https://matic-mumbai.chainstacklabs.com',\n      blockExplorer: 'https://mumbai.polygonscan.com',\n      api: ''\n    },\n    polygon : {\n        chainId: 137,\n      url: 'https://matic-mumbai.chainstacklabs.com',\n      blockExplorer: 'https://mumbai.polygonscan.com',\n      api: ''\n    },\n  }\n\n export class NetworkUtil {\n\n    static getNetworkById(chainId: number) {\n\n        const network = Object.values(networks).find((network) => chainId === network.chainId);\n        return network\n\n    }\n\n }\n\n\n","import React from 'react';\nimport { Stores, stores } from './index';\n\nexport const StoresContext = React.createContext<Stores>(stores);\nexport const useStores = () => React.useContext(StoresContext);\n","import { Box } from 'components/primitive';\nimport styled from 'styled-components';\nimport { BreakPoints } from 'utils';\n\n/**\n * Styling for Logo container.\n */\nexport const LogoWrapper = styled(Box)`\n  display: inline-block !important;\n  margin-left: 2.2rem !important;\n`;\n\nexport const NavContainer = styled(Box)`\n  background-color: ${({ theme: { colors } }) => colors.white};\n  padding: 2.5rem 35rem !important;\n  height: 8rem;\n\n  flex-flow: unset !important;\n  @media screen and (max-width: ${BreakPoints.medium}) {\n    padding: 2.5rem 1.8rem !important;\n  }\n\n  @media screen and (max-width: ${BreakPoints.small}) {\n    padding: 2.5rem 1.8rem !important;\n  }\n`;\n\n/**\n * Styling for BoxGroup container.\n */\nexport const BoxGroup = styled(Box)`\n  gap: 0.8rem;\n  margin-right: 0.7rem !important;\n  &:nth-last-child() {\n    padding: 0.8rem !important;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { Button, Image } from 'components/primitive';\nimport { NavContainer, LogoWrapper, BoxGroup } from './auth-header.component.styles';\nimport { RoutePath } from 'navigation/route-path';\n\nexport const Header = () => {\n  const redirect = () => {\n    window.location.href = 'https://docs.safient.io';\n  };\n\n  return (\n    <NavContainer align={'center'} justify={'center'} hCenter vCenter row>\n      <LogoWrapper hCenter vCenter>\n        <Link to={RoutePath.home}>\n          <Image name='safientWalletLogo' width={18} />\n        </Link>\n      </LogoWrapper>\n      <BoxGroup hCenter vCenter row align={'center'} justify={'center'}>\n        <Button variant='ghost' label={{ tx: 'common.knowMore', color: 'textLight' }} onClick={redirect} />\n      </BoxGroup>\n    </NavContainer>\n  );\n};\n","import _ from \"lodash\";\n\nexport class ServiceResponse<T> {\n  readonly data?: T;\n  readonly error?: Error;\n\n  constructor({ data, error }: { data?: T; error?: Error }) {\n    this.data = data;\n    this.error = error;\n  }\n\n  hasData(): boolean {\n    return !!this.data;\n  }\n\n  hasError(): boolean {\n    return !this.hasData();\n  }\n\n  // TODO: return proper error message\n  getErrorMessage(): string {\n    return _.get(\n      this.error,\n      'message',\n      _.get(this.error, 'error.message', 'Something went wrong'),\n    )\n  }\n\n  getErrorCode(): number { \n    return _.get(\n      this.error,\n      'error.code',\n      0)\n  }\n\n}\n","import { ServiceResponse } from \"./service-response\";\n\nexport abstract class Service {\n\n  protected success<T>(data: T): ServiceResponse<T> {\n    return new ServiceResponse<T>({ data });\n  }\n\n  protected error<T>(error: Error): ServiceResponse<T> {\n    return new ServiceResponse<T>({error});\n  }\n}\n","import Web3Modal from \"web3modal\";\nimport { AccountService } from \"./account.service\";\nimport { ServiceResponse } from \"../core/service-response\";\nimport { AccountStoreImpl, stores } from \"../../store\";\nimport { Service } from \"../core/service\";\nimport { Types } from \"@safient/core\";\nimport { User } from \"models\";\n\nexport class AccountServiceImpl extends Service implements AccountService {\n  readonly web3Modal: Web3Modal;\n  private readonly accountStore: AccountStoreImpl;\n\n  constructor() {\n    super();\n    this.accountStore = stores?.accountStore;\n    this.web3Modal = new Web3Modal({\n      cacheProvider: true,\n      theme: \"light\",\n    });\n  }\n\n  async login(): Promise<ServiceResponse<Types.User>> {\n    try {\n      const user = await this.accountStore.safient.loginUser();\n\n      if (user.data) {\n        this.accountStore.setWeb3User(user.data);\n      }\n\n      return this.success<Types.User>(this.accountStore.web3User);\n    } catch (e: any) {\n      return this.error<Types.User>(e);\n    }\n  }\n\n  async register(name: string, email: string): Promise<ServiceResponse<Types.User>> {\n    try {\n      \n      const user = await this.accountStore.safient.createUser(name, email, 0, this.accountStore.address, false);\n\n      if (user.data) {\n        this.accountStore.setWeb3User(user.data);\n      }\n\n      return this.success<Types.User>(this.accountStore.web3User);\n    } catch (e: any) {\n      return this.error<Types.User>(e);\n    }\n  }\n}\n","import Web3Modal from \"web3modal\";\nimport { EthereumService } from \"./ethereum.service\";\nimport { ServiceResponse } from \"../core/service-response\";\nimport { AccountStoreImpl, stores } from \"../../store\";\nimport { Service } from \"../core/service\";\nimport { Types } from \"@safient/core\";\nimport { User } from \"models\";\n\nexport class EthereumServiceImpl extends Service implements EthereumService {\n  constructor() {\n    super();\n    this.listen();\n    // this.accountStore = stores?.accountStore;\n  }\n\n  async listen(): Promise<void> {\n    if(window.ethereum) {\n      window.ethereum.on(\"chainChanged\", () => {\n      });\n    }\n\n    if(window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", () => {\n      });\n    }\n  }\n}\n","import { SafeService } from \"./safe.service\";\nimport { ServiceResponse } from \"../core/service-response\";\nimport { AccountStoreImpl, stores } from \"../../store\";\nimport { Service } from \"../core/service\";\nimport { Types } from \"@safient/core\";\n\nexport class SafeServiceImpl extends Service implements SafeService {\n\n  private readonly accountStore: AccountStoreImpl;\n\n  constructor() {\n    super();\n    this.accountStore = stores?.accountStore;\n  }\n\n  // Creating a signaling based seed phrase safe for Safient wallet\n  // TODO: Update all the contants while creating the safe\n  async create(\n    beneficiary: string,\n    data: string,\n    onchain: boolean,\n  ): Promise<ServiceResponse<string>> {\n    try {\n      const secretSafe: Types.SecretSafe = {\n        seedPhrase: data,\n        privateKey: null,\n        keyStore: null,\n      }\n      const cryptoSafe: Types.CryptoSafe = {\n        data: secretSafe,\n      }\n      const safeData: Types.SafeStore = {\n        safe: cryptoSafe,\n      }\n\n      const safe = await this.accountStore.safient.createSafe(\n        this.accountStore.web3User.did,\n        beneficiary,\n        safeData,\n        onchain,\n        0,\n        0,\n        0,\n      )\n\n      return this.success<string>(safe.data as string)\n    } catch (e: any) {\n\n      return this.error<string>(e.error)\n    }\n  }\n\n  async get(safeId: string): Promise<ServiceResponse<Types.Safe>> {\n    try {\n      const safe = await this.accountStore.safient.getSafe(safeId)\n      return this.success<Types.Safe>(safe.data as Types.Safe)\n    } catch (e: any) {\n      return this.error<Types.Safe>(e.error)\n    }\n  }\n\n  //Currently signal based claim\n  async claim(safeId: string): Promise<ServiceResponse<number>> {\n    try {\n      const file = {\n        name: 'dummy.pdf',\n      }\n      const disputeId = await this.accountStore.safient.createClaim(\n        safeId,\n        file,\n        'Claim evidence',\n        'Lorsem Text',\n      )\n      return this.success<number>(disputeId.data!)\n    } catch (e: any) {\n      return this.error<number>(e)\n    }\n  }\n\n  async signal(safeId: string): Promise<ServiceResponse<boolean>> {\n    try {\n      let status: boolean\n      const txReceipt = await this.accountStore.safient.createSignal(safeId)\n      if (txReceipt.data?.status === 1) {\n        status = true\n      } else {\n        status = false\n      }\n      return this.success<boolean>(status)\n    } catch (e: any) {\n      return this.error<boolean>(e)\n    }\n  }\n\n  async recover(safeId: string): Promise<ServiceResponse<string>> {\n    try {\n      const recoveredData = await this.accountStore.safient.recoverSafeByBeneficiary(\n        safeId,\n        this.accountStore.web3User.did,\n      )\n      return this.success<string>(recoveredData.data.safe.data)\n    } catch (e: any) {\n      return this.error<string>(e)\n    }\n  }\n\n}\n","import { StorageKey, StorageService } from './storage.service';\n\nexport class StorageServiceImpl implements StorageService {\n  async get(key: StorageKey): Promise<any> {\n    const data = await localStorage.getItem(key);\n    return data ? JSON.parse(data) : undefined;\n  }\n\n  async set(key: StorageKey, value: any) {\n    const data = JSON.stringify(value);\n    await localStorage.setItem(key, data);\n  }\n\n  async remove(key: StorageKey) {\n    await localStorage.removeItem(key);\n  }\n}\n","export enum StorageKey{\n  token = \"token\",\n  userId = \"userId\",\n}\n\nexport interface StorageService {\n  /**\n   * For setting the value to localStorage\n   * @param key\n   * @param value\n   */\n  set(key: StorageKey, value: any): void;\n\n  /**\n   * For getting value from localStorage\n   * @param key\n   */\n  get(key: StorageKey): any;\n\n  /**\n   * For removing value from localStorage\n   * @param key\n   */\n  remove(key: StorageKey): void;\n}\n","import { generateMnemonic, mnemonicToSeed } from 'bip39';\nimport { providers, utils, Wallet as EthersWallet } from 'ethers';\nimport { hdkey } from 'ethereumjs-wallet';\nimport { privateToAddress } from 'ethereumjs-util';\nimport { ServiceResponse } from \"../services/core/service-response\";\nimport { NetworkUtil } from './networks';\n\n\n\nexport type Account = {\n  address: string\n  privateKey: string\n}\n\nexport type WalletSecret = {\n  address: string\n  mnemonic: string\n  wallet: EthersWallet\n}\n\nexport type WalletInfo = {\n  address: string\n  balance: string\n  latestTransactions: any\n}\n\nexport class Wallet {\n  private walletProvider!: EthersWallet\n  \n\n  async create(chainId: number): Promise<ServiceResponse<WalletSecret>> {\n\n    try {\n\n    const network = NetworkUtil.getNetworkById(chainId)!.url  \n\n    const mnemonic = generateMnemonic()\n    const account: Account = await this._loadAccount(mnemonic)\n    \n    const wallet: EthersWallet = await this._loadProvider(network, account.privateKey)\n    const walletSecret: WalletSecret = {address: account.address, mnemonic: mnemonic, wallet: wallet}\n\n    return new ServiceResponse({ data: walletSecret })\n\n    }\n    catch(err: any) {\n      throw new ServiceResponse({error: err.error})\n    }\n  }\n\n  async _loadAccount(mnemonic: string): Promise<Account> {\n\n    try {\n    const seed = await mnemonicToSeed(mnemonic)\n    const hdwallet = hdkey.fromMasterSeed(seed)\n    const wallet_hdpath = \"m/44'/60'/0'/0/\"\n    const account_index = 0\n    const fullPath = wallet_hdpath + account_index\n    const wallet = hdwallet.derivePath(fullPath).getWallet()\n    const privateKey = '0x' + wallet.getPrivateKey().toString('hex')\n\n    const address = '0x' + privateToAddress(wallet.getPrivateKey()).toString('hex')\n\n    return { address, privateKey }\n  }\n  catch(err: any) {\n    throw Error('Account load failed')\n  }\n  }\n\n  async _loadProvider(network: string, privateKey: string): Promise<EthersWallet> {\n\n    try {\n\n    const signableAccount = new EthersWallet(privateKey);\n\n    const provider = new providers.JsonRpcProvider(network)\n\n    this.walletProvider = signableAccount.connect(provider)\n    \n    return this.walletProvider\n    }\n    catch(err: any) {\n      throw Error('Provider load failed')\n    }\n  }\n\n\n  async load(chainId: number, mnemonic: string): Promise<ServiceResponse<EthersWallet>> {\n\n    try {\n  \n      const network = NetworkUtil.getNetworkById(chainId)!.url  \n      const account: Account = await this._loadAccount(mnemonic)\n      const wallet: EthersWallet = await this._loadProvider(network, account.privateKey)\n  \n      return new ServiceResponse({ data: wallet })\n  \n      }\n      catch(err: any) {\n        throw new ServiceResponse({error: err.error})\n      }\n\n  }\n\n  async info(): Promise<ServiceResponse<WalletInfo>> {\n\n    try {\n\n      const apiURL = NetworkUtil.getNetworkById(await this.walletProvider.getChainId())?.api\n      const address = await this.walletProvider.getAddress()\n      const balance = await this.walletProvider.getBalance()\n      const transactionsResp =  await fetch(`${apiURL}&module=account&action=txlist&address=${address}&startblock=0&endblock=99999999&page=1&offset=5&sort=desc`).then(res => {return res.json()})\n      const latestTransactions = transactionsResp.result\n\n      const walletInfo: WalletInfo = {\n        balance: utils.formatEther(balance),\n        address: address,\n        latestTransactions: latestTransactions\n      }\n\n      return new ServiceResponse({data: walletInfo})\n\n    }\n    catch(err: any) {\n      throw new ServiceResponse({error: err.error})\n\n    }\n\n  }\n\n  async send(to: string, value: string): Promise<void> {\n    const tx = {\n      to: to,\n      value: utils.parseEther(value),\n    }\n\n    const txResponse = await this.walletProvider?.sendTransaction(tx)\n    console.log(txResponse)\n  }\n}","import { Wallet as EthersWallet } from 'ethers';\nimport { WalletService } from \"./wallet.service\";\nimport { Wallet, WalletInfo, WalletSecret } from \"utils/Wallet\";\nimport { ServiceResponse } from \"../core/service-response\";\nimport { AccountStoreImpl, SafeStoreImpl, stores } from \"../../store\";\nimport { Service } from \"../core/service\";\n\nexport class WalletServiceImpl extends Service implements WalletService {\n\n  private readonly accountStore: AccountStoreImpl;\n  private readonly safeStore: SafeStoreImpl;\n  private wallet: Wallet;\n\n  constructor() {\n    super();\n    this.accountStore = stores?.accountStore;\n    this.safeStore = stores?.safeStore;\n    this.wallet = new Wallet();\n  }\n\n  // Service API to create a new wallet\n\n  async create(): Promise<ServiceResponse<WalletSecret>> {\n\n    try {\n\n      const wallet = await this.wallet.create(this.accountStore.chainId!)\n\n      return this.success<WalletSecret>(wallet.data as WalletSecret);\n\n     \n    } catch (e: any) {\n\n      return this.error<WalletSecret>(e.error);\n    }\n  }\n\n  // Service API to load a wallet from mnemonic\n\n  async load(mnemonic: string): Promise<ServiceResponse<EthersWallet>> {\n\n    try {\n\n      const wallet = await this.wallet.load(this.accountStore.chainId!, mnemonic);\n      const walletInfo = await this.wallet.info();\n\n      return this.success<EthersWallet>(wallet.data as EthersWallet);\n\n     \n    } catch (e: any) {\n\n      return this.error<EthersWallet>(e.error)\n    }\n  }\n\n  // Service API to fetch the basic account info for a wallet\n\n  async info(): Promise<ServiceResponse<WalletInfo>> {\n\n    try {\n\n      const info = await this.wallet.info();\n      \n      if(info.data) {\n        this.safeStore.setWallet(info.data);\n      }\n      \n      return this.success<any>(info.data);\n\n     \n    } catch (e: any) {\n\n      return this.error<any>(e.error)\n    }\n  }\n\n\n}\n","import React from \"react\";\n\nimport { AccountServiceImpl } from \"../account/account.service.impl\";\nimport { EthereumServiceImpl } from \"../ethereum/ethereum.service.impl\";\nimport { SafeServiceImpl } from \"../safe/safe.service.impl\";\nimport { StorageServiceImpl } from \"../storage/storage.service.impl\";\nimport { WalletServiceImpl } from \"../wallet/wallet.service.impl\";\n\nclass Services {\n  safeService: SafeServiceImpl = new SafeServiceImpl();\n  storageService: StorageServiceImpl = new StorageServiceImpl();\n  accountService: AccountServiceImpl = new AccountServiceImpl();\n  ethereumService: EthereumServiceImpl = new EthereumServiceImpl();\n  walletService: WalletServiceImpl = new WalletServiceImpl();\n}\n\nconst services = new Services();\nexport const ServicesContext = React.createContext<Services>(services);\nexport const useServices = () => React.useContext(ServicesContext);\n","import styled from 'styled-components';\nimport { Button, Text, Image } from 'components/primitive';\nimport { BreakPoints } from 'utils';\n\nexport const LoginContainer = styled.section`\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n`;\n\nexport const LoginFormContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 90vh;\n`;\n\nexport const FormContainer = styled.div`\n  background-color: ${({ theme: { colors } }) => colors.white};\n  width: 53.4rem;\n  padding: 5rem 8rem 5rem 8rem;\n  @media screen and (max-width: ${BreakPoints.small}) {\n    margin-top: -4rem;\n    width: 320px;\n    padding: 3rem 1.5rem 3rem 1.5rem;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  width: 40rem !important;\n  margin-top: 3rem !important;\n  @media screen and (max-width: ${BreakPoints.small}) {\n    width: 100% !important;\n  }\n`;\n\nexport const LoginText = styled(Text)`\n  margin-bottom: 6rem;\n`;\n\nexport const SocialLoginContainer = styled.div`\n  margin-top: 4rem;\n`;\n\nexport const SocialIconsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  justify-items: center;\n  margin-top: 3rem;\n`;\n\nexport const SocialIcon = styled(Image)`\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.1, 1.1) !important;\n    border: 1px solid;\n    border-radius: 0.5rem !important;\n    border-color: ${({ theme: { colors } }) => colors.primary};\n  }\n`;\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Text, Input, NoticeLoader } from 'components/primitive';\nimport { Header } from 'components/common/auth-header.component';\nimport { RoutePath } from '../../../navigation/route-path';\nimport { useServices } from 'services';\nimport { useStores } from 'store';\nimport {\n  LoginContainer,\n  LoginFormContainer,\n  LoginText,\n  FormContainer,\n  StyledButton,\n  SocialLoginContainer,\n  TextContainer,\n  SocialIconsContainer,\n  SocialIcon,\n} from './login.screen.styles';\n\nexport const LoginScreen = () => {\n\n  const { accountService } = useServices();\n  const { accountStore } = useStores();\n  let history = useHistory();  \n  const [signingIn, setSigningIn] = useState(false)\n\n  const login = async () => {\n    try {\n    setSigningIn(true)  \n    const account = await accountService.login();\n    if (account.hasData()) {\n    history.push(RoutePath.home);\n    } else {\n\n    accountStore.setError(account.getErrorMessage(), account.getErrorCode())\n    history.push(RoutePath.register);\n    }\n    setSigningIn(false)\n  }\n  \n  catch(e) {\n    console.log(e)\n  }\n}\n\n  return (\n    <LoginContainer>\n      <Header />\n\n      <LoginFormContainer>\n       { signingIn && <NoticeLoader label={{tx:'common.signingInLabel'}} helperText={{text: \"Please sign the signature on MetaMask. This may take a couple of seconds ...\"}}/>  }\n        <FormContainer>\n          <LoginText variant='contentHeader' center tx='auth.getStarted' />\n          <Input type='text' label='Enter your Email or DID' placeholder='hello@example.com' />\n\n          <StyledButton\n            variant='primary'\n            label={{ tx: 'auth.login' }}\n            onClick={() => {}}\n            color='primaryGradient'\n          />\n\n          <SocialLoginContainer>\n            <TextContainer>\n              <Text variant='contentHeader' center tx='common.or' />\n              <Text variant='contentHeader' center tx='common.alternativeOption' />\n            </TextContainer>\n\n            <SocialIconsContainer>\n              <SocialIcon name='loginWithGitHub' height={5} width={7} />\n              <SocialIcon name='loginWithGoogle' height={5} width={7} />\n              <SocialIcon name='loginWithMetaMask' height={5} width={7} onClick={login} />\n            </SocialIconsContainer>\n          </SocialLoginContainer>\n        </FormContainer>\n      </LoginFormContainer>\n    </LoginContainer>\n  );\n};","import styled from \"styled-components\";\nimport { Box, Button, Input, Text } from \"components/primitive\";\nimport { BreakPoints } from \"utils\";\n\nexport const RegistrationContainer = styled.section`\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n`;\n\nexport const RegistrationFormContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10rem;\n  height: 100vh;\n`;\n\nexport const RegistrationFormBox = styled(Box)`\n  gap: 2.6rem;\n`;\n\nexport const FormContainer = styled.div`\n  background-color: ${({ theme: { colors } }) => colors.white};\n  // width: 53.4rem;\n  padding: 5rem 8rem 5rem 8rem;\n  align-items: center;\n  margin-top: -8rem;\n  @media screen and (max-width: ${BreakPoints.small}) {\n    margin-top: -10rem;\n    width: 320px;\n    padding: 3rem 1.5rem 3rem 1.5rem;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  width: 40rem !important;\n  margin-top: 3rem !important;\n  @media screen and (max-width: ${BreakPoints.small}) {\n    width: 100% !important;\n  }\n`;\n\nexport const RegistrationText = styled(Text)`\n  margin-bottom: 6rem;\n`;\n\nexport const TextContainer = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nexport const StyledInput = styled(Input)`\n  @media screen and (max-width: ${BreakPoints.small}) {\n    flex-direction: column;\n    margin-top: 2rem;\n    gap: 2rem;\n    width: 100% !important;\n  }\n`;\n\nexport const StyledCheckbox = styled.input.attrs({ type: \"checkbox\" })`\n  margin-top: 0.5rem;\n`;\n\nexport const TermsContainer = styled(Box)`\n  display: flex;\n  flex: flex-wrap;\n  margin-top: 3rem !important;\n  gap: 1.6rem;\n\n  @media screen and (max-width: ${BreakPoints.small}) {\n    flex-direction: column;\n    margin-top: 2rem;\n    gap: 2rem;\n    width: 100% !important;\n  }\n`;\n\nexport const LinkText = styled.span`\n  text-decoration: underline;\n  &:hover,\n  &:active {\n    cursor: pointer;\n    color: ${({ theme }) => theme.colors.textLight};\n  }\n`;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { t } from 'i18n-js';\nimport { Text, Input, Box, Alert } from \"components/primitive\";\nimport { observer } from \"mobx-react-lite\";\n\nimport { Header } from \"components/common/auth-header.component\";\nimport {\n  RegistrationContainer,\n  RegistrationFormContainer,\n  RegistrationText,\n  FormContainer,\n  StyledButton,\n  TermsContainer,\n  StyledCheckbox,\n  LinkText,\n  RegistrationFormBox,\n  StyledInput,\n} from \"./register.screen.styles\";\nimport { useServices } from \"services\";\nimport { useStores } from \"store\";\nimport { RoutePath } from \"navigation/route-path\";\n\nexport const RegisterScreen = observer(() => {\n\n\n  const { accountService } = useServices();\n  const { accountStore } = useStores();\n  let history = useHistory();\n\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const register = async () => {\n    try {\n      accountStore.setFetching(true)\n      const account = await accountService.register(fullName, email);\n      if (account.hasData()) {\n        history.push(RoutePath.home);\n      } else {\n        console.log(account.getErrorMessage());\n        history.push(RoutePath.register);\n      }\n      accountStore.setFetching(false);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <RegistrationContainer>\n      <Header />\n\n      <RegistrationFormContainer>\n        <FormContainer>\n          <Alert icon variant=\"warning\" label={{tx: 'auth.registerAlert'}}/>\n          <RegistrationText variant=\"contentHeader\" center tx=\"auth.createAccount\" />\n\n          <RegistrationFormBox>\n            <StyledInput\n              type=\"text\"\n              label=\"Enter your Full Name\"\n              placeholder=\"John Doe\"\n              onChange={(e: any) => {\n                setFullName(e.target.value);\n              }}\n            />\n            <StyledInput\n              type=\"text\"\n              label=\"Enter your Email\"\n              placeholder=\"johndoe@example.com\"\n              onChange={(e: any) => setEmail(e.target.value)}\n            />\n            \n          </RegistrationFormBox>\n          <TermsContainer row>\n            <StyledCheckbox type=\"checkbox\" />\n            <Text>\n              By clicking, you agree to the\n              <LinkText onClick={()=>window.location.href = 'https://resources.safient.io/legal/terms'}> {t(\"auth.terms\")} </LinkText>\n              &\n              <LinkText onClick={()=>window.location.href = 'https://resources.safient.io/legal/privacy'}> {t(\"auth.privacy\")} </LinkText>\n            </Text>\n          </TermsContainer>\n          <StyledButton\n            variant=\"primary\"\n            loading={accountStore.fetching}\n            label={{ text: accountStore.fetching ? \"Registering..\" : \"Create\" }}\n            onClick={register}\n            color=\"primaryGradient\"\n          />\n        </FormContainer>\n      </RegistrationFormContainer>\n    </RegistrationContainer>\n  );\n});\n","import styled from 'styled-components';\nimport { Input, ToggleSwitch } from 'components/primitive';\nimport { BreakPoints } from 'utils';\n\nexport const AccountContainer = styled.section`\n  width: 100%;\n  padding-left: 7rem;\n  top: 10%;\n  left: 17%;\n  bottom: 0;\n  position: fixed;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  @media screen and (max-width: ${BreakPoints.medium}) {\n    padding: 0 1rem 1rem 1rem;\n    position: static;\n    margin-top: 10rem;\n    width: 100vw;\n  }\n`;\n\nexport const AccountInfoContainer = styled.section`\n  @media screen and (max-width: ${BreakPoints.medium}) {\n    margin-top: 0.1rem;\n  }\n`;\n\nexport const AccountInfo = styled.section`\n  margin-top: 2rem;\n  padding: 4rem;\n  background: white;\n  width: 98.7rem;\n  box-shadow: ${({ theme }) => theme.colors.shadow};\n  border-radius: 0.5rem;\n\n  @media screen and (max-width: ${BreakPoints.medium}) {\n    width: 100%;\n  }\n`;\n\nexport const ProfileContainer = styled.section`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 4rem;\n\n  @media screen and (max-width: ${BreakPoints.small}) {\n    flex-direction: column;\n    gap: 1.5rem;\n    align-items: center;\n  }\n`;\n\nexport const Profile = styled.div`\n  display: flex;\n  gap: 1.6rem;\n  width: fit-content;\n\n  @media screen and (max-width: ${BreakPoints.small}) {\n    flex-direction: column;\n    gap: 1.5rem;\n    align-items: center;\n  }\n`;\n\nexport const ProfileInfo = styled.span`\n  display: inline-flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  gap: 1rem;\n  margin-top: 0.5rem;\n`;\n\nexport const StatsCardContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: ${BreakPoints.medium}) {\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-start;\n    gap: 1.2rem;\n  }\n\n  @media screen and (max-width: ${BreakPoints.small}) {\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    gap: 1.2rem;\n  }\n`;\n\nexport const AccountSettingsContainer = styled.section`\n  margin-top: 5rem;\n\n  @media screen and (max-width: ${BreakPoints.medium}) {\n    margin-top: 1.8rem;\n    width: 100vw;\n  }\n`;\n\nexport const InputContainer = styled.section`\n  display: flex;\n  align-item: center;\n  margin-top: 3rem;\n  gap: 15.2rem;\n\n  @media screen and (max-width: ${BreakPoints.medium}) {\n    flex-direction: column;\n    margin-top: 2rem;\n    gap: 2rem;\n    width: 100vw;\n  }\n`;\n\nexport const StyledDiv = styled.div`\n  display: flex !important;\n  align-items: center;\n  justify-content: center;\n  gap: 3rem;\n\n  @media screen and (max-width: ${BreakPoints.medium}) {\n    display: flex !important;\n    width: 22.5rem !important;\n    justify-content: space-between;\n  }\n`;\n\nexport const SwitchContainer = styled.div`\n  margin-top: -1.3rem;\n`;\n\nexport const Card = styled.section`\n  margin-top: 2rem;\n  padding: 4rem !important;\n  background: white;\n  width: 98.7rem;\n  box-shadow: ${({ theme }) => theme.colors.shadow};\n  border-radius: 0.5rem;\n\n  @media screen and (max-width: ${BreakPoints.medium}) {\n    padding: 2rem !important;\n    width: 69.4rem;\n  }\n\n  @media screen and (max-width: ${BreakPoints.small}) {\n    padding: 2rem !important;\n    width: 34rem;\n  }\n`;\n\nexport const DefaultSettingsContainer = styled.section`\n  margin-top: 6rem;\n  border-radius: 0.5px;\n  margin-bottom: 8rem !important;\n\n  @media screen and (max-width: ${BreakPoints.medium}) {\n    width: 34rem;\n    margin-top: 1.2rem;\n  }\n`;\n\nexport const StyledInput = styled(Input)`\n  @media screen and (max-width: ${BreakPoints.medium}) {\n    width: 30rem !important;\n  }\n`;","import styled from \"styled-components\";\nimport { Box, Button, Input, Text } from \"../../components/primitive\";\nimport { BreakPoints } from \"../../utils\";\n\n/**\n * Main container of the home screen.\n */\nexport const HomeScreenContainer = styled(Box)`\n  height: 95%;\n  margin: 3rem !important;\n  @media screen and (max-width: ${BreakPoints.small}) {\n    height: 80vh;\n    width: 100vw;\n  }\n`;\n\n/**\n * Styles for Title Text.\n */\nexport const Title = styled(Text)`\n  margin-left: 38rem;\n  @media screen and (max-width: ${BreakPoints.small}) {\n    margin-left: 0.1rem;\n  }\n`;\n\nexport const WalletCreateFormContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10rem;\n  height: 100vh;\n`;\n\nexport const WalletCreateFormBox = styled(Box)`\n  gap: 2.6rem;\n`;\n\nexport const FormContainer = styled.div`\n  background-color: ${({ theme: { colors } }) => colors.white};\n  // width: 53.4rem;\n  padding: 5rem 8rem 5rem 8rem;\n  align-items: center;\n  margin-top: -8rem;\n  @media screen and (max-width: ${BreakPoints.small}) {\n    margin-top: -10rem;\n    width: 320px;\n    padding: 3rem 1.5rem 3rem 1.5rem;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  width: 40rem !important;\n  margin-top: 3rem !important;\n  @media screen and (max-width: ${BreakPoints.small}) {\n    width: 100% !important;\n  }\n`;\n\nexport const WalletCreateText = styled(Text)`\n  margin-bottom: 6rem;\n`;\n\nexport const StyledInput = styled(Input)`\n  @media screen and (max-width: ${BreakPoints.small}) {\n    flex-direction: column;\n    margin-top: 2rem;\n    gap: 2rem;\n    width: 100% !important;\n  }\n`;\n","/**\n * Defining all the route names\n * For adding any new route the name have to add here\n */\nexport enum RouteName {\n  home = 'home',\n  login = 'login',\n  register = 'register',\n  account = 'account',\n  notFound = 'notFound',\n  welcome = 'welcome',\n  createWallet = 'createWallet',\n  walletOverview = 'walletOverview',\n  walletClaim = 'walletClaim',\n  walletSettings = 'walletSettings',\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { NoticeLoader } from \"components/primitive\";\nimport {\n  FormContainer,\n  HomeScreenContainer,\n  StyledButton,\n  StyledInput,\n  Title,\n  WalletCreateFormContainer,\n  WalletCreateFormBox,\n  WalletCreateText,\n} from \"./create-wallet.screen.styles\";\n\nimport { RoutePath } from \"navigation/route-path\";\nimport { useServices } from \"services\";\nimport { useStores } from \"store\";\nimport { observer } from \"mobx-react-lite\";\n\nexport const CreateWalletScreen = observer(() => {\n  const { safeService, walletService } = useServices();\n  const { safeStore } = useStores();\n  let history = useHistory();\n\n  const [walletName, setWalletName] = useState(\"\");\n  const [walletDescription, setWalletDescription] = useState(\"\");\n  const [walletBeneficiary, setWalletBeneficiary] = useState(\n    \"did:key:z6MkvbAdUeiQoeLbcvV3tmnAjTeV3WAtXrxqu2Tbx1PFTpH9\"\n  );\n\n  const createSafe = async () => {\n    try {\n      safeStore.setFetching(true);\n\n      const wallet = await walletService.create()\n      await walletService.info()\n\n      if(wallet.hasData()) {\n\n      const safe = await safeService.create(walletBeneficiary, wallet.data!.mnemonic, false);\n      if (safe.hasData()) {\n        history.push(RoutePath.walletOverview);\n      } else {\n        history.push(RoutePath.createWallet);\n      }\n      }\n     \n      safeStore.setFetching(false);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <HomeScreenContainer>\n      {safeStore.fetching && (\n        <NoticeLoader\n          label={{ tx: \"common.signingInLabel\" }}\n          helperText={{\n            text:\n              \"Please sign the signature on MetaMask. This may take a couple of seconds ...\",\n          }}\n        />\n      )}\n      <Title variant=\"contentHeader\" tx=\"common.createWallet\" />\n\n      <WalletCreateFormContainer>\n        <FormContainer>\n          <WalletCreateText\n            variant=\"contentHeader\"\n            center\n            tx=\"wallet.enterDetails\"\n          />\n\n          <WalletCreateFormBox>\n            <StyledInput\n              type=\"text\"\n              label=\"Wallet Name\"\n              placeholder=\"John Doe Wallet\"\n              onChange={(e: any) => {\n                setWalletName(e.target.value);\n              }}\n            />\n            <StyledInput\n              type=\"text\"\n              label=\"Wallet Description\"\n              placeholder=\"johndoe@safeint.com\"\n              onChange={(e: any) => setWalletDescription(e.target.value)}\n            />\n            <StyledInput\n              type=\"text\"\n              label=\"Beneficiary\"\n              placeholder=\"johndoe@safient.com\"\n              onChange={(e: any) => setWalletBeneficiary(e.target.value)}\n            />\n          </WalletCreateFormBox>\n\n          <StyledButton\n            variant=\"primary\"\n            label={{ text: safeStore.fetching ? \"Creating..\" : \"Create\" }}\n            onClick={createSafe}\n            color=\"primaryGradient\"\n          />\n        </FormContainer>\n      </WalletCreateFormContainer>\n    </HomeScreenContainer>\n  );\n});\n","import styled from 'styled-components';\nimport { Box, Text } from 'components/primitive';\n\n/**\n * Styles for WelcomeScreen Container\n */\nexport const WelcomeContainer = styled(Box)`\n  height: 100%;\n`;\n\n/**\n * Styles for Gradient Text.\n */\n\nexport const Title = styled(Text)`\n  background: ${({ theme: { colors } }) => colors.primaryGradient};\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;\n","import { RouteProps } from 'react-router-dom';\nimport {\n  AccountScreen,\n  WalletClaimScreen,\n  HomeScreen,\n  LoginScreen,\n  NotFoundScreen,\n  RegisterScreen,\n  WelcomeScreen,\n  CreateWalletScreen,\n  WalletOverviewScreen,\n  WalletSettingsScreen,\n} from '../screens';\nimport { RouteName } from './route-name';\nimport { RoutePath } from './route-path';\n\nexport interface IRoute extends RouteProps {\n  path: string;\n  name: RouteName;\n  exact: boolean;\n  component: React.ComponentType<any>;\n  props?: any;\n  private?: boolean;\n}\n\nexport const routes: IRoute[] = [\n  {\n    path: RoutePath.home,\n    name: RouteName.home,\n    exact: true,\n    private: true,\n    component: HomeScreen,\n    props: { name: 'HomeScreen' },\n  },\n  {\n    path: RoutePath.login,\n    name: RouteName.login,\n    exact: true,\n    component: LoginScreen,\n  },\n  {\n    path: RoutePath.register,\n    name: RouteName.register,\n    exact: true,\n    private: true,\n    component: RegisterScreen,\n  },\n  {\n    path: RoutePath.account,\n    name: RouteName.account,\n    exact: true,\n    private: true,\n    component: AccountScreen,\n  },\n  {\n    path: RoutePath.notFound,\n    name: RouteName.notFound,\n    exact: true,\n    component: NotFoundScreen,\n  },\n\n  {\n    path: RoutePath.welcome,\n    name: RouteName.welcome,\n    exact: true,\n    component: WelcomeScreen,\n  },\n\n  {\n    path: RoutePath.createWallet,\n    name: RouteName.createWallet,\n    exact: true,\n    private: true,\n    component: CreateWalletScreen,\n  },\n  {\n    path: RoutePath.walletOverview,\n    name: RouteName.walletOverview,\n    exact: true,\n    private: true,\n    component: WalletOverviewScreen,\n  },\n  {\n    path: RoutePath.walletClaim,\n    name: RouteName.walletClaim,\n    exact: true,\n    private: true,\n    component: WalletClaimScreen,\n  },\n  {\n    path: RoutePath.walletSettings,\n    name: RouteName.walletSettings,\n    exact: true,\n    private: true,\n    component: WalletSettingsScreen,\n  },\n];\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, IconSvg, Text } from 'components/primitive';\nimport { WalletCard } from './components/wallet-card/wallet-card.component';\nimport { UserRole } from './components/wallet-card/wallet-card.component.props';\nimport { HomeScreenContainer, Title, CardsContainer, SafeCard, SafeText } from './home.screen.styles';\n\nimport { RoutePath } from 'navigation/route-path';\nimport { useStores } from 'store';\nimport { WalletCardShimmer } from './components/wallet-card/wallet-card-shimmer.component';\n\nexport const HomeScreen: React.FC = () => {\n  const { accountStore } = useStores();\n\n  return (\n    <HomeScreenContainer>\n      <Title variant='contentHeader' tx='common.wallets' />\n\n      <Box hCenter>\n        <CardsContainer row hCenter>\n          <SafeCard hCenter vCenter>\n            <Link to={RoutePath.createWallet}>\n              <IconSvg name='add' size='xLarge' />\n            </Link>\n            <SafeText variant='content' tx='common.createWallet' />\n          </SafeCard>\n          {accountStore.web3User?.safes.map((safe) => (\n            <WalletCard walletName='Sample Wallet' roleName={safe.type as UserRole} status='active' />\n          ))}\n        </CardsContainer>\n      </Box>\n    </HomeScreenContainer>\n  );\n};\n","import { StatsCard, Text, Button, Avatar, ToggleSwitch } from 'components/primitive';\nimport {\n  AccountContainer,\n  AccountInfoContainer,\n  AccountInfo,\n  ProfileContainer,\n  Profile,\n  ProfileInfo,\n  StatsCardContainer,\n  AccountSettingsContainer,\n  StyledDiv,\n  DefaultSettingsContainer,\n  Card,\n  StyledInput,\n  InputContainer,\n  SwitchContainer,\n} from './account.screen.styles';\nimport { stores } from '../../store';\n\nexport const AccountScreen = () => {\n\n  return (\n    <AccountContainer>\n      {/* Account */}\n      <AccountInfoContainer>\n        <Text variant='contentHeader' tx='common.profile' left />\n        <AccountInfo>\n          <ProfileContainer>\n            <Profile>\n              <Avatar size='xLarge' flat name='placeHolderAvatar' />\n              <ProfileInfo>\n                <Text variant='contentHeader' color='textLight' text={ stores.accountStore.web3User?.name } />{' '}\n                <Text variant='small' text={ stores.accountStore.web3User?.email }  />\n              </ProfileInfo>\n            </Profile>\n            <Button\n              variant='primary'\n              color='primaryGradient'\n              label={{ text: 'Edit Profile' }}\n              onClick={() => 'something'}\n            />\n          </ProfileContainer>\n          <StatsCardContainer>\n            <StatsCard\n              heading={{ text: 'Safes you are Guarding' }}\n              count={{ text: stores.accountStore.web3User?.safes.length.toString() }}\n              iconName={{ name: 'guarding' }}\n            />\n            <StatsCard heading={{ text: 'Safes Created' }} count={{ text: stores.accountStore.web3User?.safes.length.toString() }} iconName={{ name: 'safes' }} />\n            <StatsCard heading={{ text: 'Inherited Safes' }} count={{ text: stores.accountStore.web3User?.safes.length.toString() }} iconName={{ name: 'inherit' }} />\n          </StatsCardContainer>\n        </AccountInfo>\n      </AccountInfoContainer>\n\n      {/* Setting */}\n      <AccountSettingsContainer>\n        <Text variant='contentHeader' tx='accountPage.settings' left />\n        <Card>\n          <Text variant='contentHeader' tx='accountPage.notifications' left />\n\n          <InputContainer>\n            <StyledDiv>\n              <Text variant='content' tx='accountPage.inAppNotifications' left />\n              <SwitchContainer>\n                <ToggleSwitch toggleID='inApp' checked={true} onChange={() => 'checked'} />\n              </SwitchContainer>\n            </StyledDiv>\n\n            <StyledDiv>\n              <Text variant='content' tx='accountPage.emailNotifications' left />\n              <SwitchContainer>\n                <ToggleSwitch toggleID='email' checked={true} onChange={() => 'checked'} />\n              </SwitchContainer>\n            </StyledDiv>\n          </InputContainer>\n        </Card>\n      </AccountSettingsContainer>\n\n      {/* default settings */}\n      <DefaultSettingsContainer>\n        <Card>\n          <Text variant='contentHeader' tx='accountPage.defaultSafeConfigs' left />\n          <InputContainer>\n            <StyledInput type='text' label='Beneficiary' placeholder='DID of the beneficiary' />\n          </InputContainer>\n        </Card>\n      </DefaultSettingsContainer>\n    </AccountContainer>\n  );\n};\n\n","import React from 'react';\n\nexport function NotFoundScreen() {\n  return <div>Not Found screen</div>;\n}\n","import { useHistory } from 'react-router-dom';\nimport { RoutePath } from 'navigation/route-path';\nimport { Header } from 'components/common/auth-header.component';\nimport { Box, Button, Image, Text } from 'components/primitive';\nimport { WelcomeContainer, Title } from './landing-page.screen.styles';\n\nexport const WelcomeScreen = () => {\n  let history = useHistory();\n\n  const redirectToLogin = () => {\n    history.push(RoutePath.login);\n  };\n\n  return (\n    <>\n      <Header />\n      <WelcomeContainer hCenter vCenter>\n        <Box hCenter vCenter marginTop={8}>\n          <Image width={41.7} name='landingPage' />\n        </Box>\n        <Box hCenter vCenter marginTop={2}>\n          <Box gap={0.8} hCenter vCenter marginBottom={1.8}>\n            <Title variant='title' tx='welcomePage.heading' />\n            <Text variant='small' tx='welcomePage.subHeading' />\n          </Box>\n          <Button\n            variant='primary'\n            label={{ tx: 'auth.getStarted' }}\n            onClick={redirectToLogin}\n            color='primaryGradient'\n          />\n        </Box>\n      </WelcomeContainer>\n    </>\n  );\n};\n","export const WalletOverviewScreen = () => {\n  return <>Wallet Overview</>;\n};\n","import React from 'react';\n\nexport function WalletClaimScreen() {\n  return <div>claims screen</div>;\n}\n","export const WalletSettingsScreen = () => {\n  return <>Wallet settings screen</>;\n};\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { AppLayout } from '../components/app-layout';\nimport { Redirect, Route, RouteComponentProps, Switch } from 'react-router-dom';\nimport { LoginScreen, RegisterScreen } from '../screens';\nimport { useStores } from '../store';\nimport { RoutePath } from './route-path';\nimport { routes } from './routes';\n\nexport const Navigation = observer(() => {\n  const { accountStore } = useStores();\n  //TODO - Remove mock after auth integration\n  const isMock: boolean = true;\n  let isSignedIn: boolean = accountStore.userSignedIn || isMock;\n  let isNewUser: boolean = !accountStore.userExists || isMock;\n\n  return (\n    <Switch>\n      {routes.map(({ component: Component, name, path, exact, private: isPrivate, props: routeProps }, index) => {\n        if (isPrivate) {\n          return (\n            <Route\n              key={name}\n              path={path}\n              exact={exact}\n              render={(props: any) =>\n                isSignedIn ? (\n                  <AppLayout>\n                    <Component {...props} {...routeProps} />\n                  </AppLayout>\n                ) : isNewUser ? (\n                  <RegisterScreen {...props} />\n                ) : (\n                  <LoginScreen {...props} />\n                )\n              }\n            />\n          );\n        }\n\n        return (\n          <Route\n            key={index}\n            path={path}\n            exact={exact}\n            render={(props: RouteComponentProps<any>) => <Component {...props} {...routeProps} />}\n          />\n        );\n      })}\n      <Redirect to={RoutePath.notFound} />\n    </Switch>\n  );\n});\n","import { colors } from './../colors';\nimport { images } from './../images';\nimport { DefaultTheme } from 'styled-components';\n\nexport const theme: DefaultTheme = {\n  colors,\n  images,\n};\n","import { HashRouter as Router } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { Navigation } from './navigation/navigation';\nimport { theme } from './themes/light';\nimport { GlobalStyle } from './utils/GlobalReset';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Navigation />\n        <GlobalStyle />\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}